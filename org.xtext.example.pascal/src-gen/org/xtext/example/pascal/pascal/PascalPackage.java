/**
 * generated by Xtext 2.15.0
 */
package org.xtext.example.pascal.pascal;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.pascal.pascal.PascalFactory
 * @model kind="package"
 * @generated
 */
public interface PascalPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "pascal";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/pascal/Pascal";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "pascal";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  PascalPackage eINSTANCE = org.xtext.example.pascal.pascal.impl.PascalPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.pascalImpl <em>pascal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.pascalImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getpascal()
   * @generated
   */
  int PASCAL = 0;

  /**
   * The feature id for the '<em><b>Program</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PASCAL__PROGRAM = 0;

  /**
   * The number of structural features of the '<em>pascal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PASCAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.programImpl <em>program</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.programImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprogram()
   * @generated
   */
  int PROGRAM = 1;

  /**
   * The feature id for the '<em><b>Heading</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__HEADING = 0;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM__BLOCK = 1;

  /**
   * The number of structural features of the '<em>program</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.program_heading_blockImpl <em>program heading block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.program_heading_blockImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprogram_heading_block()
   * @generated
   */
  int PROGRAM_HEADING_BLOCK = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_HEADING_BLOCK__NAME = 0;

  /**
   * The number of structural features of the '<em>program heading block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_HEADING_BLOCK_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.blockImpl <em>block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.blockImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getblock()
   * @generated
   */
  int BLOCK = 3;

  /**
   * The feature id for the '<em><b>Label</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__LABEL = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__TYPE = 1;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__VARIABLE = 2;

  /**
   * The feature id for the '<em><b>Constant</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__CONSTANT = 3;

  /**
   * The feature id for the '<em><b>Abstraction</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__ABSTRACTION = 4;

  /**
   * The feature id for the '<em><b>Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__STATEMENT = 5;

  /**
   * The number of structural features of the '<em>block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.statement_partImpl <em>statement part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.statement_partImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstatement_part()
   * @generated
   */
  int STATEMENT_PART = 4;

  /**
   * The feature id for the '<em><b>Sequence</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_PART__SEQUENCE = 0;

  /**
   * The number of structural features of the '<em>statement part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.statement_sequenceImpl <em>statement sequence</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.statement_sequenceImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstatement_sequence()
   * @generated
   */
  int STATEMENT_SEQUENCE = 5;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_SEQUENCE__STATEMENTS = 0;

  /**
   * The number of structural features of the '<em>statement sequence</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_SEQUENCE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.statementImpl <em>statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstatement()
   * @generated
   */
  int STATEMENT = 6;

  /**
   * The feature id for the '<em><b>Label</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__LABEL = 0;

  /**
   * The feature id for the '<em><b>Simple</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__SIMPLE = 1;

  /**
   * The number of structural features of the '<em>statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.simple_statementImpl <em>simple statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.simple_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsimple_statement()
   * @generated
   */
  int SIMPLE_STATEMENT = 7;

  /**
   * The feature id for the '<em><b>Assignment</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT__ASSIGNMENT = 0;

  /**
   * The feature id for the '<em><b>Function</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT__FUNCTION = 1;

  /**
   * The feature id for the '<em><b>Function noargs</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT__FUNCTION_NOARGS = 2;

  /**
   * The number of structural features of the '<em>simple statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.assignment_statementImpl <em>assignment statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.assignment_statementImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getassignment_statement()
   * @generated
   */
  int ASSIGNMENT_STATEMENT = 8;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_STATEMENT__VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_STATEMENT__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>assignment statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.labelImpl <em>label</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.labelImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getlabel()
   * @generated
   */
  int LABEL = 9;

  /**
   * The feature id for the '<em><b>Number</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL__NUMBER = 0;

  /**
   * The number of structural features of the '<em>label</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.variableImpl <em>variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.variableImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable()
   * @generated
   */
  int VARIABLE = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__NAME = 0;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__VARIABLE = 1;

  /**
   * The number of structural features of the '<em>variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.var_Impl <em>var </em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.var_Impl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvar_()
   * @generated
   */
  int VAR_ = 11;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR___EXPRESSIONS = 0;

  /**
   * The feature id for the '<em><b>Array</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR___ARRAY = 1;

  /**
   * The feature id for the '<em><b>Accessor</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR___ACCESSOR = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR___NAME = 3;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR___VARIABLE = 4;

  /**
   * The feature id for the '<em><b>Pointer</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR___POINTER = 5;

  /**
   * The number of structural features of the '<em>var </em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR__FEATURE_COUNT = 6;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.expression_listImpl <em>expression list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.expression_listImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getexpression_list()
   * @generated
   */
  int EXPRESSION_LIST = 12;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LIST__EXPRESSIONS = 0;

  /**
   * The number of structural features of the '<em>expression list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.expressionImpl <em>expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.expressionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getexpression()
   * @generated
   */
  int EXPRESSION = 13;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__EXPRESSIONS = 0;

  /**
   * The feature id for the '<em><b>Operators</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__OPERATORS = 1;

  /**
   * The number of structural features of the '<em>expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.simple_expressionImpl <em>simple expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.simple_expressionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsimple_expression()
   * @generated
   */
  int SIMPLE_EXPRESSION = 14;

  /**
   * The feature id for the '<em><b>Prefix Operator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_EXPRESSION__PREFIX_OPERATOR = 0;

  /**
   * The feature id for the '<em><b>Terms</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_EXPRESSION__TERMS = 1;

  /**
   * The feature id for the '<em><b>Operators</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_EXPRESSION__OPERATORS = 2;

  /**
   * The number of structural features of the '<em>simple expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_EXPRESSION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.termImpl <em>term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.termImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getterm()
   * @generated
   */
  int TERM = 15;

  /**
   * The feature id for the '<em><b>Factors</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__FACTORS = 0;

  /**
   * The feature id for the '<em><b>Operators</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__OPERATORS = 1;

  /**
   * The number of structural features of the '<em>term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.factorImpl <em>factor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.factorImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfactor()
   * @generated
   */
  int FACTOR = 16;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__NUMBER = 1;

  /**
   * The feature id for the '<em><b>String</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__STRING = 2;

  /**
   * The feature id for the '<em><b>Set</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__SET = 3;

  /**
   * The feature id for the '<em><b>Nil</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__NIL = 4;

  /**
   * The feature id for the '<em><b>Boolean</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__BOOLEAN = 5;

  /**
   * The feature id for the '<em><b>Function</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__FUNCTION = 6;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__EXPRESSION = 7;

  /**
   * The feature id for the '<em><b>Not</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__NOT = 8;

  /**
   * The number of structural features of the '<em>factor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR_FEATURE_COUNT = 9;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.function_designatorImpl <em>function designator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.function_designatorImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_designator()
   * @generated
   */
  int FUNCTION_DESIGNATOR = 17;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DESIGNATOR__NAME = 0;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DESIGNATOR__EXPRESSIONS = 1;

  /**
   * The number of structural features of the '<em>function designator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DESIGNATOR_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.function_procedure_declarationImpl <em>function procedure declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.function_procedure_declarationImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_procedure_declaration()
   * @generated
   */
  int FUNCTION_PROCEDURE_DECLARATION = 18;

  /**
   * The feature id for the '<em><b>Procedures</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_PROCEDURE_DECLARATION__PROCEDURES = 0;

  /**
   * The feature id for the '<em><b>Functions</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_PROCEDURE_DECLARATION__FUNCTIONS = 1;

  /**
   * The number of structural features of the '<em>function procedure declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_PROCEDURE_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.function_headingImpl <em>function heading</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.function_headingImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_heading()
   * @generated
   */
  int FUNCTION_HEADING = 19;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_HEADING__NAME = 0;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_HEADING__PARAMETERS = 1;

  /**
   * The feature id for the '<em><b>Return Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_HEADING__RETURN_TYPE = 2;

  /**
   * The number of structural features of the '<em>function heading</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_HEADING_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.function_declarationImpl <em>function declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.function_declarationImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_declaration()
   * @generated
   */
  int FUNCTION_DECLARATION = 20;

  /**
   * The feature id for the '<em><b>Heading</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION__HEADING = 0;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION__BLOCK = 1;

  /**
   * The number of structural features of the '<em>function declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.formal_parameter_listImpl <em>formal parameter list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.formal_parameter_listImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getformal_parameter_list()
   * @generated
   */
  int FORMAL_PARAMETER_LIST = 21;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_LIST__PARAMETERS = 0;

  /**
   * The number of structural features of the '<em>formal parameter list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.formal_parameter_sectionImpl <em>formal parameter section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.formal_parameter_sectionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getformal_parameter_section()
   * @generated
   */
  int FORMAL_PARAMETER_SECTION = 22;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_SECTION__VALUE = 0;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_SECTION__VARIABLE = 1;

  /**
   * The feature id for the '<em><b>Procedure</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_SECTION__PROCEDURE = 2;

  /**
   * The feature id for the '<em><b>Function</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_SECTION__FUNCTION = 3;

  /**
   * The number of structural features of the '<em>formal parameter section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_SECTION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.value_parameter_sectionImpl <em>value parameter section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.value_parameter_sectionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvalue_parameter_section()
   * @generated
   */
  int VALUE_PARAMETER_SECTION = 23;

  /**
   * The feature id for the '<em><b>Identifiers</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE_PARAMETER_SECTION__IDENTIFIERS = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE_PARAMETER_SECTION__TYPE = 1;

  /**
   * The number of structural features of the '<em>value parameter section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VALUE_PARAMETER_SECTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.identifier_listImpl <em>identifier list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.identifier_listImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getidentifier_list()
   * @generated
   */
  int IDENTIFIER_LIST = 24;

  /**
   * The feature id for the '<em><b>Names</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER_LIST__NAMES = 0;

  /**
   * The number of structural features of the '<em>identifier list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.parameter_typeImpl <em>parameter type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.parameter_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getparameter_type()
   * @generated
   */
  int PARAMETER_TYPE = 25;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_TYPE__NAME = 0;

  /**
   * The number of structural features of the '<em>parameter type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.variable_parameter_sectionImpl <em>variable parameter section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.variable_parameter_sectionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_parameter_section()
   * @generated
   */
  int VARIABLE_PARAMETER_SECTION = 26;

  /**
   * The feature id for the '<em><b>Indentifiers</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_PARAMETER_SECTION__INDENTIFIERS = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_PARAMETER_SECTION__TYPE = 1;

  /**
   * The number of structural features of the '<em>variable parameter section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_PARAMETER_SECTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.procedure_declarationImpl <em>procedure declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.procedure_declarationImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_declaration()
   * @generated
   */
  int PROCEDURE_DECLARATION = 27;

  /**
   * The feature id for the '<em><b>Heading</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_DECLARATION__HEADING = 0;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_DECLARATION__BLOCK = 1;

  /**
   * The number of structural features of the '<em>procedure declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.procedure_headingImpl <em>procedure heading</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.procedure_headingImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_heading()
   * @generated
   */
  int PROCEDURE_HEADING = 28;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_HEADING__NAME = 0;

  /**
   * The feature id for the '<em><b>Parameters</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_HEADING__PARAMETERS = 1;

  /**
   * The number of structural features of the '<em>procedure heading</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_HEADING_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.setImpl <em>set</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.setImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getset()
   * @generated
   */
  int SET = 29;

  /**
   * The feature id for the '<em><b>Brackets</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET__BRACKETS = 0;

  /**
   * The feature id for the '<em><b>Expressions</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET__EXPRESSIONS = 1;

  /**
   * The number of structural features of the '<em>set</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.numberImpl <em>number</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.numberImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getnumber()
   * @generated
   */
  int NUMBER = 30;

  /**
   * The feature id for the '<em><b>Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER__NUMBER = 0;

  /**
   * The number of structural features of the '<em>number</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMBER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.any_numberImpl <em>any number</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.any_numberImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getany_number()
   * @generated
   */
  int ANY_NUMBER = 31;

  /**
   * The feature id for the '<em><b>Integer</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANY_NUMBER__INTEGER = 0;

  /**
   * The feature id for the '<em><b>Real</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANY_NUMBER__REAL = 1;

  /**
   * The number of structural features of the '<em>any number</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANY_NUMBER_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.label_declarationImpl <em>label declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.label_declarationImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getlabel_declaration()
   * @generated
   */
  int LABEL_DECLARATION = 32;

  /**
   * The feature id for the '<em><b>Labels</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_DECLARATION__LABELS = 0;

  /**
   * The number of structural features of the '<em>label declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_DECLARATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.constantImpl <em>constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.constantImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconstant()
   * @generated
   */
  int CONSTANT = 33;

  /**
   * The feature id for the '<em><b>Opterator</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__OPTERATOR = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__NAME = 1;

  /**
   * The feature id for the '<em><b>Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__NUMBER = 2;

  /**
   * The feature id for the '<em><b>String</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__STRING = 3;

  /**
   * The feature id for the '<em><b>Bool Literal</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__BOOL_LITERAL = 4;

  /**
   * The number of structural features of the '<em>constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_FEATURE_COUNT = 5;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.constant_definition_partImpl <em>constant definition part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.constant_definition_partImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconstant_definition_part()
   * @generated
   */
  int CONSTANT_DEFINITION_PART = 34;

  /**
   * The feature id for the '<em><b>Consts</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION_PART__CONSTS = 0;

  /**
   * The number of structural features of the '<em>constant definition part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.constant_definitionImpl <em>constant definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.constant_definitionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconstant_definition()
   * @generated
   */
  int CONSTANT_DEFINITION = 35;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION__NAME = 0;

  /**
   * The feature id for the '<em><b>Const</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION__CONST = 1;

  /**
   * The number of structural features of the '<em>constant definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.type_definition_partImpl <em>type definition part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.type_definition_partImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype_definition_part()
   * @generated
   */
  int TYPE_DEFINITION_PART = 36;

  /**
   * The feature id for the '<em><b>Types</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION_PART__TYPES = 0;

  /**
   * The number of structural features of the '<em>type definition part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.type_definitionImpl <em>type definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.type_definitionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype_definition()
   * @generated
   */
  int TYPE_DEFINITION = 37;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION__NAME = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION__TYPE = 1;

  /**
   * The number of structural features of the '<em>type definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.typeImpl <em>type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype()
   * @generated
   */
  int TYPE = 38;

  /**
   * The feature id for the '<em><b>Simple</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__SIMPLE = 0;

  /**
   * The feature id for the '<em><b>Structured</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__STRUCTURED = 1;

  /**
   * The feature id for the '<em><b>Pointer</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE__POINTER = 2;

  /**
   * The number of structural features of the '<em>type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.simple_typeImpl <em>simple type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.simple_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsimple_type()
   * @generated
   */
  int SIMPLE_TYPE = 39;

  /**
   * The feature id for the '<em><b>Subrange</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPE__SUBRANGE = 0;

  /**
   * The feature id for the '<em><b>Enumerated</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPE__ENUMERATED = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPE__NAME = 2;

  /**
   * The number of structural features of the '<em>simple type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.subrange_typeImpl <em>subrange type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.subrange_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsubrange_type()
   * @generated
   */
  int SUBRANGE_TYPE = 40;

  /**
   * The feature id for the '<em><b>Initial Const</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBRANGE_TYPE__INITIAL_CONST = 0;

  /**
   * The feature id for the '<em><b>Final Const</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBRANGE_TYPE__FINAL_CONST = 1;

  /**
   * The feature id for the '<em><b>Subrange</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBRANGE_TYPE__SUBRANGE = 2;

  /**
   * The feature id for the '<em><b>Const</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBRANGE_TYPE__CONST = 3;

  /**
   * The number of structural features of the '<em>subrange type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBRANGE_TYPE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.enumerated_typeImpl <em>enumerated type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.enumerated_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getenumerated_type()
   * @generated
   */
  int ENUMERATED_TYPE = 41;

  /**
   * The feature id for the '<em><b>Identifiers</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUMERATED_TYPE__IDENTIFIERS = 0;

  /**
   * The number of structural features of the '<em>enumerated type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ENUMERATED_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.strutured_typeImpl <em>strutured type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.strutured_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstrutured_type()
   * @generated
   */
  int STRUTURED_TYPE = 42;

  /**
   * The feature id for the '<em><b>Packed</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUTURED_TYPE__PACKED = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUTURED_TYPE__TYPE = 1;

  /**
   * The number of structural features of the '<em>strutured type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUTURED_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.unpacked_strutured_typeImpl <em>unpacked strutured type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.unpacked_strutured_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getunpacked_strutured_type()
   * @generated
   */
  int UNPACKED_STRUTURED_TYPE = 43;

  /**
   * The feature id for the '<em><b>Set</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_STRUTURED_TYPE__SET = 0;

  /**
   * The number of structural features of the '<em>unpacked strutured type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_STRUTURED_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.set_typeImpl <em>set type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.set_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getset_type()
   * @generated
   */
  int SET_TYPE = 44;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_TYPE__TYPE = 0;

  /**
   * The number of structural features of the '<em>set type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SET_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.pointer_typeImpl <em>pointer type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.pointer_typeImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getpointer_type()
   * @generated
   */
  int POINTER_TYPE = 45;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTER_TYPE__TYPE = 0;

  /**
   * The number of structural features of the '<em>pointer type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTER_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.variable_declaration_partImpl <em>variable declaration part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.variable_declaration_partImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_declaration_part()
   * @generated
   */
  int VARIABLE_DECLARATION_PART = 46;

  /**
   * The feature id for the '<em><b>Sections</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_PART__SECTIONS = 0;

  /**
   * The number of structural features of the '<em>variable declaration part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.variable_sectionImpl <em>variable section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.variable_sectionImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_section()
   * @generated
   */
  int VARIABLE_SECTION = 47;

  /**
   * The feature id for the '<em><b>Identifiers</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_SECTION__IDENTIFIERS = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_SECTION__TYPE = 1;

  /**
   * The number of structural features of the '<em>variable section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_SECTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.pascal.pascal.impl.variable_identifier_listImpl <em>variable identifier list</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.pascal.pascal.impl.variable_identifier_listImpl
   * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_identifier_list()
   * @generated
   */
  int VARIABLE_IDENTIFIER_LIST = 48;

  /**
   * The feature id for the '<em><b>Names</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_IDENTIFIER_LIST__NAMES = 0;

  /**
   * The number of structural features of the '<em>variable identifier list</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_IDENTIFIER_LIST_FEATURE_COUNT = 1;


  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.pascal <em>pascal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>pascal</em>'.
   * @see org.xtext.example.pascal.pascal.pascal
   * @generated
   */
  EClass getpascal();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.pascal#getProgram <em>Program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Program</em>'.
   * @see org.xtext.example.pascal.pascal.pascal#getProgram()
   * @see #getpascal()
   * @generated
   */
  EReference getpascal_Program();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.program <em>program</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>program</em>'.
   * @see org.xtext.example.pascal.pascal.program
   * @generated
   */
  EClass getprogram();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.program#getHeading <em>Heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Heading</em>'.
   * @see org.xtext.example.pascal.pascal.program#getHeading()
   * @see #getprogram()
   * @generated
   */
  EReference getprogram_Heading();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.program#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see org.xtext.example.pascal.pascal.program#getBlock()
   * @see #getprogram()
   * @generated
   */
  EReference getprogram_Block();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.program_heading_block <em>program heading block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>program heading block</em>'.
   * @see org.xtext.example.pascal.pascal.program_heading_block
   * @generated
   */
  EClass getprogram_heading_block();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.program_heading_block#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.pascal.pascal.program_heading_block#getName()
   * @see #getprogram_heading_block()
   * @generated
   */
  EAttribute getprogram_heading_block_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.block <em>block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>block</em>'.
   * @see org.xtext.example.pascal.pascal.block
   * @generated
   */
  EClass getblock();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.block#getLabel <em>Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Label</em>'.
   * @see org.xtext.example.pascal.pascal.block#getLabel()
   * @see #getblock()
   * @generated
   */
  EReference getblock_Label();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.block#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.block#getType()
   * @see #getblock()
   * @generated
   */
  EReference getblock_Type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.block#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.pascal.pascal.block#getVariable()
   * @see #getblock()
   * @generated
   */
  EReference getblock_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.block#getConstant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constant</em>'.
   * @see org.xtext.example.pascal.pascal.block#getConstant()
   * @see #getblock()
   * @generated
   */
  EReference getblock_Constant();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.block#getAbstraction <em>Abstraction</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Abstraction</em>'.
   * @see org.xtext.example.pascal.pascal.block#getAbstraction()
   * @see #getblock()
   * @generated
   */
  EReference getblock_Abstraction();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.block#getStatement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement</em>'.
   * @see org.xtext.example.pascal.pascal.block#getStatement()
   * @see #getblock()
   * @generated
   */
  EReference getblock_Statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.statement_part <em>statement part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>statement part</em>'.
   * @see org.xtext.example.pascal.pascal.statement_part
   * @generated
   */
  EClass getstatement_part();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.statement_part#getSequence <em>Sequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sequence</em>'.
   * @see org.xtext.example.pascal.pascal.statement_part#getSequence()
   * @see #getstatement_part()
   * @generated
   */
  EReference getstatement_part_Sequence();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.statement_sequence <em>statement sequence</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>statement sequence</em>'.
   * @see org.xtext.example.pascal.pascal.statement_sequence
   * @generated
   */
  EClass getstatement_sequence();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.statement_sequence#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statements</em>'.
   * @see org.xtext.example.pascal.pascal.statement_sequence#getStatements()
   * @see #getstatement_sequence()
   * @generated
   */
  EReference getstatement_sequence_Statements();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.statement <em>statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>statement</em>'.
   * @see org.xtext.example.pascal.pascal.statement
   * @generated
   */
  EClass getstatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.statement#getLabel <em>Label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Label</em>'.
   * @see org.xtext.example.pascal.pascal.statement#getLabel()
   * @see #getstatement()
   * @generated
   */
  EReference getstatement_Label();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.statement#getSimple <em>Simple</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Simple</em>'.
   * @see org.xtext.example.pascal.pascal.statement#getSimple()
   * @see #getstatement()
   * @generated
   */
  EReference getstatement_Simple();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.simple_statement <em>simple statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>simple statement</em>'.
   * @see org.xtext.example.pascal.pascal.simple_statement
   * @generated
   */
  EClass getsimple_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.simple_statement#getAssignment <em>Assignment</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Assignment</em>'.
   * @see org.xtext.example.pascal.pascal.simple_statement#getAssignment()
   * @see #getsimple_statement()
   * @generated
   */
  EReference getsimple_statement_Assignment();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.simple_statement#getFunction <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function</em>'.
   * @see org.xtext.example.pascal.pascal.simple_statement#getFunction()
   * @see #getsimple_statement()
   * @generated
   */
  EReference getsimple_statement_Function();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.simple_statement#getFunction_noargs <em>Function noargs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Function noargs</em>'.
   * @see org.xtext.example.pascal.pascal.simple_statement#getFunction_noargs()
   * @see #getsimple_statement()
   * @generated
   */
  EAttribute getsimple_statement_Function_noargs();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.assignment_statement <em>assignment statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>assignment statement</em>'.
   * @see org.xtext.example.pascal.pascal.assignment_statement
   * @generated
   */
  EClass getassignment_statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.assignment_statement#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.pascal.pascal.assignment_statement#getVariable()
   * @see #getassignment_statement()
   * @generated
   */
  EReference getassignment_statement_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.assignment_statement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.assignment_statement#getExpression()
   * @see #getassignment_statement()
   * @generated
   */
  EReference getassignment_statement_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.label <em>label</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>label</em>'.
   * @see org.xtext.example.pascal.pascal.label
   * @generated
   */
  EClass getlabel();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.label#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Number</em>'.
   * @see org.xtext.example.pascal.pascal.label#getNumber()
   * @see #getlabel()
   * @generated
   */
  EAttribute getlabel_Number();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.variable <em>variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable</em>'.
   * @see org.xtext.example.pascal.pascal.variable
   * @generated
   */
  EClass getvariable();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.variable#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.pascal.pascal.variable#getName()
   * @see #getvariable()
   * @generated
   */
  EAttribute getvariable_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variable#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.pascal.pascal.variable#getVariable()
   * @see #getvariable()
   * @generated
   */
  EReference getvariable_Variable();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.var_ <em>var </em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>var </em>'.
   * @see org.xtext.example.pascal.pascal.var_
   * @generated
   */
  EClass getvar_();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.var_#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expressions</em>'.
   * @see org.xtext.example.pascal.pascal.var_#getExpressions()
   * @see #getvar_()
   * @generated
   */
  EReference getvar__Expressions();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.var_#getArray <em>Array</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Array</em>'.
   * @see org.xtext.example.pascal.pascal.var_#getArray()
   * @see #getvar_()
   * @generated
   */
  EReference getvar__Array();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.var_#isAccessor <em>Accessor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Accessor</em>'.
   * @see org.xtext.example.pascal.pascal.var_#isAccessor()
   * @see #getvar_()
   * @generated
   */
  EAttribute getvar__Accessor();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.var_#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.pascal.pascal.var_#getName()
   * @see #getvar_()
   * @generated
   */
  EAttribute getvar__Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.var_#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.pascal.pascal.var_#getVariable()
   * @see #getvar_()
   * @generated
   */
  EReference getvar__Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.var_#getPointer <em>Pointer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pointer</em>'.
   * @see org.xtext.example.pascal.pascal.var_#getPointer()
   * @see #getvar_()
   * @generated
   */
  EReference getvar__Pointer();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.expression_list <em>expression list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>expression list</em>'.
   * @see org.xtext.example.pascal.pascal.expression_list
   * @generated
   */
  EClass getexpression_list();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.expression_list#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see org.xtext.example.pascal.pascal.expression_list#getExpressions()
   * @see #getexpression_list()
   * @generated
   */
  EReference getexpression_list_Expressions();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.expression <em>expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>expression</em>'.
   * @see org.xtext.example.pascal.pascal.expression
   * @generated
   */
  EClass getexpression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.expression#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expressions</em>'.
   * @see org.xtext.example.pascal.pascal.expression#getExpressions()
   * @see #getexpression()
   * @generated
   */
  EReference getexpression_Expressions();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.pascal.pascal.expression#getOperators <em>Operators</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Operators</em>'.
   * @see org.xtext.example.pascal.pascal.expression#getOperators()
   * @see #getexpression()
   * @generated
   */
  EAttribute getexpression_Operators();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.simple_expression <em>simple expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>simple expression</em>'.
   * @see org.xtext.example.pascal.pascal.simple_expression
   * @generated
   */
  EClass getsimple_expression();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.simple_expression#getPrefixOperator <em>Prefix Operator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Prefix Operator</em>'.
   * @see org.xtext.example.pascal.pascal.simple_expression#getPrefixOperator()
   * @see #getsimple_expression()
   * @generated
   */
  EAttribute getsimple_expression_PrefixOperator();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.simple_expression#getTerms <em>Terms</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Terms</em>'.
   * @see org.xtext.example.pascal.pascal.simple_expression#getTerms()
   * @see #getsimple_expression()
   * @generated
   */
  EReference getsimple_expression_Terms();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.pascal.pascal.simple_expression#getOperators <em>Operators</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Operators</em>'.
   * @see org.xtext.example.pascal.pascal.simple_expression#getOperators()
   * @see #getsimple_expression()
   * @generated
   */
  EAttribute getsimple_expression_Operators();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.term <em>term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>term</em>'.
   * @see org.xtext.example.pascal.pascal.term
   * @generated
   */
  EClass getterm();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.term#getFactors <em>Factors</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Factors</em>'.
   * @see org.xtext.example.pascal.pascal.term#getFactors()
   * @see #getterm()
   * @generated
   */
  EReference getterm_Factors();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.pascal.pascal.term#getOperators <em>Operators</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Operators</em>'.
   * @see org.xtext.example.pascal.pascal.term#getOperators()
   * @see #getterm()
   * @generated
   */
  EAttribute getterm_Operators();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.factor <em>factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>factor</em>'.
   * @see org.xtext.example.pascal.pascal.factor
   * @generated
   */
  EClass getfactor();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getVariable()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Number</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getNumber()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Number();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.factor#getString <em>String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>String</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getString()
   * @see #getfactor()
   * @generated
   */
  EAttribute getfactor_String();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getSet <em>Set</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Set</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getSet()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Set();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.factor#isNil <em>Nil</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nil</em>'.
   * @see org.xtext.example.pascal.pascal.factor#isNil()
   * @see #getfactor()
   * @generated
   */
  EAttribute getfactor_Nil();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.factor#getBoolean <em>Boolean</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Boolean</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getBoolean()
   * @see #getfactor()
   * @generated
   */
  EAttribute getfactor_Boolean();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getFunction <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getFunction()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Function();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getExpression()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Expression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.factor#getNot <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Not</em>'.
   * @see org.xtext.example.pascal.pascal.factor#getNot()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Not();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.function_designator <em>function designator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function designator</em>'.
   * @see org.xtext.example.pascal.pascal.function_designator
   * @generated
   */
  EClass getfunction_designator();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.function_designator#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.pascal.pascal.function_designator#getName()
   * @see #getfunction_designator()
   * @generated
   */
  EAttribute getfunction_designator_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_designator#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expressions</em>'.
   * @see org.xtext.example.pascal.pascal.function_designator#getExpressions()
   * @see #getfunction_designator()
   * @generated
   */
  EReference getfunction_designator_Expressions();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.function_procedure_declaration <em>function procedure declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function procedure declaration</em>'.
   * @see org.xtext.example.pascal.pascal.function_procedure_declaration
   * @generated
   */
  EClass getfunction_procedure_declaration();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.function_procedure_declaration#getProcedures <em>Procedures</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Procedures</em>'.
   * @see org.xtext.example.pascal.pascal.function_procedure_declaration#getProcedures()
   * @see #getfunction_procedure_declaration()
   * @generated
   */
  EReference getfunction_procedure_declaration_Procedures();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.function_procedure_declaration#getFunctions <em>Functions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Functions</em>'.
   * @see org.xtext.example.pascal.pascal.function_procedure_declaration#getFunctions()
   * @see #getfunction_procedure_declaration()
   * @generated
   */
  EReference getfunction_procedure_declaration_Functions();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.function_heading <em>function heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function heading</em>'.
   * @see org.xtext.example.pascal.pascal.function_heading
   * @generated
   */
  EClass getfunction_heading();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.function_heading#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.pascal.pascal.function_heading#getName()
   * @see #getfunction_heading()
   * @generated
   */
  EAttribute getfunction_heading_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_heading#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parameters</em>'.
   * @see org.xtext.example.pascal.pascal.function_heading#getParameters()
   * @see #getfunction_heading()
   * @generated
   */
  EReference getfunction_heading_Parameters();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.function_heading#getReturnType <em>Return Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Return Type</em>'.
   * @see org.xtext.example.pascal.pascal.function_heading#getReturnType()
   * @see #getfunction_heading()
   * @generated
   */
  EAttribute getfunction_heading_ReturnType();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.function_declaration <em>function declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function declaration</em>'.
   * @see org.xtext.example.pascal.pascal.function_declaration
   * @generated
   */
  EClass getfunction_declaration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_declaration#getHeading <em>Heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Heading</em>'.
   * @see org.xtext.example.pascal.pascal.function_declaration#getHeading()
   * @see #getfunction_declaration()
   * @generated
   */
  EReference getfunction_declaration_Heading();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.function_declaration#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see org.xtext.example.pascal.pascal.function_declaration#getBlock()
   * @see #getfunction_declaration()
   * @generated
   */
  EReference getfunction_declaration_Block();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.formal_parameter_list <em>formal parameter list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>formal parameter list</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_list
   * @generated
   */
  EClass getformal_parameter_list();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.formal_parameter_list#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Parameters</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_list#getParameters()
   * @see #getformal_parameter_list()
   * @generated
   */
  EReference getformal_parameter_list_Parameters();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.formal_parameter_section <em>formal parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>formal parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_section
   * @generated
   */
  EClass getformal_parameter_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.formal_parameter_section#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_section#getValue()
   * @see #getformal_parameter_section()
   * @generated
   */
  EReference getformal_parameter_section_Value();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.formal_parameter_section#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_section#getVariable()
   * @see #getformal_parameter_section()
   * @generated
   */
  EReference getformal_parameter_section_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.formal_parameter_section#getProcedure <em>Procedure</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_section#getProcedure()
   * @see #getformal_parameter_section()
   * @generated
   */
  EReference getformal_parameter_section_Procedure();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.formal_parameter_section#getFunction <em>Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function</em>'.
   * @see org.xtext.example.pascal.pascal.formal_parameter_section#getFunction()
   * @see #getformal_parameter_section()
   * @generated
   */
  EReference getformal_parameter_section_Function();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.value_parameter_section <em>value parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>value parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.value_parameter_section
   * @generated
   */
  EClass getvalue_parameter_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.value_parameter_section#getIdentifiers <em>Identifiers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifiers</em>'.
   * @see org.xtext.example.pascal.pascal.value_parameter_section#getIdentifiers()
   * @see #getvalue_parameter_section()
   * @generated
   */
  EReference getvalue_parameter_section_Identifiers();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.value_parameter_section#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.value_parameter_section#getType()
   * @see #getvalue_parameter_section()
   * @generated
   */
  EReference getvalue_parameter_section_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.identifier_list <em>identifier list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>identifier list</em>'.
   * @see org.xtext.example.pascal.pascal.identifier_list
   * @generated
   */
  EClass getidentifier_list();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.pascal.pascal.identifier_list#getNames <em>Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Names</em>'.
   * @see org.xtext.example.pascal.pascal.identifier_list#getNames()
   * @see #getidentifier_list()
   * @generated
   */
  EAttribute getidentifier_list_Names();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.parameter_type <em>parameter type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>parameter type</em>'.
   * @see org.xtext.example.pascal.pascal.parameter_type
   * @generated
   */
  EClass getparameter_type();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.parameter_type#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.pascal.pascal.parameter_type#getName()
   * @see #getparameter_type()
   * @generated
   */
  EAttribute getparameter_type_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.variable_parameter_section <em>variable parameter section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable parameter section</em>'.
   * @see org.xtext.example.pascal.pascal.variable_parameter_section
   * @generated
   */
  EClass getvariable_parameter_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variable_parameter_section#getIndentifiers <em>Indentifiers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Indentifiers</em>'.
   * @see org.xtext.example.pascal.pascal.variable_parameter_section#getIndentifiers()
   * @see #getvariable_parameter_section()
   * @generated
   */
  EReference getvariable_parameter_section_Indentifiers();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variable_parameter_section#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.variable_parameter_section#getType()
   * @see #getvariable_parameter_section()
   * @generated
   */
  EReference getvariable_parameter_section_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.procedure_declaration <em>procedure declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure declaration</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_declaration
   * @generated
   */
  EClass getprocedure_declaration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.procedure_declaration#getHeading <em>Heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Heading</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_declaration#getHeading()
   * @see #getprocedure_declaration()
   * @generated
   */
  EReference getprocedure_declaration_Heading();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.procedure_declaration#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_declaration#getBlock()
   * @see #getprocedure_declaration()
   * @generated
   */
  EReference getprocedure_declaration_Block();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.procedure_heading <em>procedure heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure heading</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_heading
   * @generated
   */
  EClass getprocedure_heading();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.procedure_heading#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_heading#getName()
   * @see #getprocedure_heading()
   * @generated
   */
  EAttribute getprocedure_heading_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.procedure_heading#getParameters <em>Parameters</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parameters</em>'.
   * @see org.xtext.example.pascal.pascal.procedure_heading#getParameters()
   * @see #getprocedure_heading()
   * @generated
   */
  EReference getprocedure_heading_Parameters();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.set <em>set</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>set</em>'.
   * @see org.xtext.example.pascal.pascal.set
   * @generated
   */
  EClass getset();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.pascal.pascal.set#getBrackets <em>Brackets</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Brackets</em>'.
   * @see org.xtext.example.pascal.pascal.set#getBrackets()
   * @see #getset()
   * @generated
   */
  EAttribute getset_Brackets();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.set#getExpressions <em>Expressions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expressions</em>'.
   * @see org.xtext.example.pascal.pascal.set#getExpressions()
   * @see #getset()
   * @generated
   */
  EReference getset_Expressions();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.number <em>number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>number</em>'.
   * @see org.xtext.example.pascal.pascal.number
   * @generated
   */
  EClass getnumber();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.number#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Number</em>'.
   * @see org.xtext.example.pascal.pascal.number#getNumber()
   * @see #getnumber()
   * @generated
   */
  EReference getnumber_Number();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.any_number <em>any number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>any number</em>'.
   * @see org.xtext.example.pascal.pascal.any_number
   * @generated
   */
  EClass getany_number();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.any_number#getInteger <em>Integer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Integer</em>'.
   * @see org.xtext.example.pascal.pascal.any_number#getInteger()
   * @see #getany_number()
   * @generated
   */
  EAttribute getany_number_Integer();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.any_number#getReal <em>Real</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Real</em>'.
   * @see org.xtext.example.pascal.pascal.any_number#getReal()
   * @see #getany_number()
   * @generated
   */
  EAttribute getany_number_Real();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.label_declaration <em>label declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>label declaration</em>'.
   * @see org.xtext.example.pascal.pascal.label_declaration
   * @generated
   */
  EClass getlabel_declaration();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.label_declaration#getLabels <em>Labels</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Labels</em>'.
   * @see org.xtext.example.pascal.pascal.label_declaration#getLabels()
   * @see #getlabel_declaration()
   * @generated
   */
  EReference getlabel_declaration_Labels();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.constant <em>constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>constant</em>'.
   * @see org.xtext.example.pascal.pascal.constant
   * @generated
   */
  EClass getconstant();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.constant#getOpterator <em>Opterator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Opterator</em>'.
   * @see org.xtext.example.pascal.pascal.constant#getOpterator()
   * @see #getconstant()
   * @generated
   */
  EAttribute getconstant_Opterator();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.constant#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.pascal.pascal.constant#getName()
   * @see #getconstant()
   * @generated
   */
  EAttribute getconstant_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.constant#getNumber <em>Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Number</em>'.
   * @see org.xtext.example.pascal.pascal.constant#getNumber()
   * @see #getconstant()
   * @generated
   */
  EReference getconstant_Number();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.constant#getString <em>String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>String</em>'.
   * @see org.xtext.example.pascal.pascal.constant#getString()
   * @see #getconstant()
   * @generated
   */
  EAttribute getconstant_String();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.constant#getBoolLiteral <em>Bool Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bool Literal</em>'.
   * @see org.xtext.example.pascal.pascal.constant#getBoolLiteral()
   * @see #getconstant()
   * @generated
   */
  EAttribute getconstant_BoolLiteral();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.constant_definition_part <em>constant definition part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>constant definition part</em>'.
   * @see org.xtext.example.pascal.pascal.constant_definition_part
   * @generated
   */
  EClass getconstant_definition_part();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.constant_definition_part#getConsts <em>Consts</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Consts</em>'.
   * @see org.xtext.example.pascal.pascal.constant_definition_part#getConsts()
   * @see #getconstant_definition_part()
   * @generated
   */
  EReference getconstant_definition_part_Consts();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.constant_definition <em>constant definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>constant definition</em>'.
   * @see org.xtext.example.pascal.pascal.constant_definition
   * @generated
   */
  EClass getconstant_definition();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.constant_definition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.pascal.pascal.constant_definition#getName()
   * @see #getconstant_definition()
   * @generated
   */
  EAttribute getconstant_definition_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.constant_definition#getConst <em>Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Const</em>'.
   * @see org.xtext.example.pascal.pascal.constant_definition#getConst()
   * @see #getconstant_definition()
   * @generated
   */
  EReference getconstant_definition_Const();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.type_definition_part <em>type definition part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>type definition part</em>'.
   * @see org.xtext.example.pascal.pascal.type_definition_part
   * @generated
   */
  EClass gettype_definition_part();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.type_definition_part#getTypes <em>Types</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Types</em>'.
   * @see org.xtext.example.pascal.pascal.type_definition_part#getTypes()
   * @see #gettype_definition_part()
   * @generated
   */
  EReference gettype_definition_part_Types();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.type_definition <em>type definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>type definition</em>'.
   * @see org.xtext.example.pascal.pascal.type_definition
   * @generated
   */
  EClass gettype_definition();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.type_definition#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.pascal.pascal.type_definition#getName()
   * @see #gettype_definition()
   * @generated
   */
  EAttribute gettype_definition_Name();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.type_definition#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.type_definition#getType()
   * @see #gettype_definition()
   * @generated
   */
  EReference gettype_definition_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.type <em>type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>type</em>'.
   * @see org.xtext.example.pascal.pascal.type
   * @generated
   */
  EClass gettype();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.type#getSimple <em>Simple</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Simple</em>'.
   * @see org.xtext.example.pascal.pascal.type#getSimple()
   * @see #gettype()
   * @generated
   */
  EReference gettype_Simple();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.type#getStructured <em>Structured</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Structured</em>'.
   * @see org.xtext.example.pascal.pascal.type#getStructured()
   * @see #gettype()
   * @generated
   */
  EReference gettype_Structured();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.type#getPointer <em>Pointer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Pointer</em>'.
   * @see org.xtext.example.pascal.pascal.type#getPointer()
   * @see #gettype()
   * @generated
   */
  EReference gettype_Pointer();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.simple_type <em>simple type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>simple type</em>'.
   * @see org.xtext.example.pascal.pascal.simple_type
   * @generated
   */
  EClass getsimple_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.simple_type#getSubrange <em>Subrange</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Subrange</em>'.
   * @see org.xtext.example.pascal.pascal.simple_type#getSubrange()
   * @see #getsimple_type()
   * @generated
   */
  EReference getsimple_type_Subrange();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.simple_type#getEnumerated <em>Enumerated</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Enumerated</em>'.
   * @see org.xtext.example.pascal.pascal.simple_type#getEnumerated()
   * @see #getsimple_type()
   * @generated
   */
  EReference getsimple_type_Enumerated();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.simple_type#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.example.pascal.pascal.simple_type#getName()
   * @see #getsimple_type()
   * @generated
   */
  EAttribute getsimple_type_Name();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.subrange_type <em>subrange type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>subrange type</em>'.
   * @see org.xtext.example.pascal.pascal.subrange_type
   * @generated
   */
  EClass getsubrange_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.subrange_type#getInitialConst <em>Initial Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Initial Const</em>'.
   * @see org.xtext.example.pascal.pascal.subrange_type#getInitialConst()
   * @see #getsubrange_type()
   * @generated
   */
  EReference getsubrange_type_InitialConst();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.subrange_type#getFinalConst <em>Final Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Final Const</em>'.
   * @see org.xtext.example.pascal.pascal.subrange_type#getFinalConst()
   * @see #getsubrange_type()
   * @generated
   */
  EReference getsubrange_type_FinalConst();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.subrange_type#getSubrange <em>Subrange</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Subrange</em>'.
   * @see org.xtext.example.pascal.pascal.subrange_type#getSubrange()
   * @see #getsubrange_type()
   * @generated
   */
  EAttribute getsubrange_type_Subrange();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.subrange_type#getConst <em>Const</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Const</em>'.
   * @see org.xtext.example.pascal.pascal.subrange_type#getConst()
   * @see #getsubrange_type()
   * @generated
   */
  EReference getsubrange_type_Const();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.enumerated_type <em>enumerated type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>enumerated type</em>'.
   * @see org.xtext.example.pascal.pascal.enumerated_type
   * @generated
   */
  EClass getenumerated_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.enumerated_type#getIdentifiers <em>Identifiers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifiers</em>'.
   * @see org.xtext.example.pascal.pascal.enumerated_type#getIdentifiers()
   * @see #getenumerated_type()
   * @generated
   */
  EReference getenumerated_type_Identifiers();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.strutured_type <em>strutured type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>strutured type</em>'.
   * @see org.xtext.example.pascal.pascal.strutured_type
   * @generated
   */
  EClass getstrutured_type();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.pascal.pascal.strutured_type#isPacked <em>Packed</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Packed</em>'.
   * @see org.xtext.example.pascal.pascal.strutured_type#isPacked()
   * @see #getstrutured_type()
   * @generated
   */
  EAttribute getstrutured_type_Packed();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.strutured_type#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.strutured_type#getType()
   * @see #getstrutured_type()
   * @generated
   */
  EReference getstrutured_type_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.unpacked_strutured_type <em>unpacked strutured type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>unpacked strutured type</em>'.
   * @see org.xtext.example.pascal.pascal.unpacked_strutured_type
   * @generated
   */
  EClass getunpacked_strutured_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.unpacked_strutured_type#getSet <em>Set</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Set</em>'.
   * @see org.xtext.example.pascal.pascal.unpacked_strutured_type#getSet()
   * @see #getunpacked_strutured_type()
   * @generated
   */
  EReference getunpacked_strutured_type_Set();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.set_type <em>set type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>set type</em>'.
   * @see org.xtext.example.pascal.pascal.set_type
   * @generated
   */
  EClass getset_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.set_type#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.set_type#getType()
   * @see #getset_type()
   * @generated
   */
  EReference getset_type_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.pointer_type <em>pointer type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>pointer type</em>'.
   * @see org.xtext.example.pascal.pascal.pointer_type
   * @generated
   */
  EClass getpointer_type();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.pointer_type#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.pointer_type#getType()
   * @see #getpointer_type()
   * @generated
   */
  EReference getpointer_type_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.variable_declaration_part <em>variable declaration part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable declaration part</em>'.
   * @see org.xtext.example.pascal.pascal.variable_declaration_part
   * @generated
   */
  EClass getvariable_declaration_part();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.pascal.pascal.variable_declaration_part#getSections <em>Sections</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Sections</em>'.
   * @see org.xtext.example.pascal.pascal.variable_declaration_part#getSections()
   * @see #getvariable_declaration_part()
   * @generated
   */
  EReference getvariable_declaration_part_Sections();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.variable_section <em>variable section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable section</em>'.
   * @see org.xtext.example.pascal.pascal.variable_section
   * @generated
   */
  EClass getvariable_section();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variable_section#getIdentifiers <em>Identifiers</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifiers</em>'.
   * @see org.xtext.example.pascal.pascal.variable_section#getIdentifiers()
   * @see #getvariable_section()
   * @generated
   */
  EReference getvariable_section_Identifiers();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.pascal.pascal.variable_section#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.pascal.pascal.variable_section#getType()
   * @see #getvariable_section()
   * @generated
   */
  EReference getvariable_section_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.pascal.pascal.variable_identifier_list <em>variable identifier list</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable identifier list</em>'.
   * @see org.xtext.example.pascal.pascal.variable_identifier_list
   * @generated
   */
  EClass getvariable_identifier_list();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.pascal.pascal.variable_identifier_list#getNames <em>Names</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Names</em>'.
   * @see org.xtext.example.pascal.pascal.variable_identifier_list#getNames()
   * @see #getvariable_identifier_list()
   * @generated
   */
  EAttribute getvariable_identifier_list_Names();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  PascalFactory getPascalFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.pascalImpl <em>pascal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.pascalImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getpascal()
     * @generated
     */
    EClass PASCAL = eINSTANCE.getpascal();

    /**
     * The meta object literal for the '<em><b>Program</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PASCAL__PROGRAM = eINSTANCE.getpascal_Program();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.programImpl <em>program</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.programImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprogram()
     * @generated
     */
    EClass PROGRAM = eINSTANCE.getprogram();

    /**
     * The meta object literal for the '<em><b>Heading</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__HEADING = eINSTANCE.getprogram_Heading();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM__BLOCK = eINSTANCE.getprogram_Block();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.program_heading_blockImpl <em>program heading block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.program_heading_blockImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprogram_heading_block()
     * @generated
     */
    EClass PROGRAM_HEADING_BLOCK = eINSTANCE.getprogram_heading_block();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROGRAM_HEADING_BLOCK__NAME = eINSTANCE.getprogram_heading_block_Name();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.blockImpl <em>block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.blockImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getblock()
     * @generated
     */
    EClass BLOCK = eINSTANCE.getblock();

    /**
     * The meta object literal for the '<em><b>Label</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__LABEL = eINSTANCE.getblock_Label();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__TYPE = eINSTANCE.getblock_Type();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__VARIABLE = eINSTANCE.getblock_Variable();

    /**
     * The meta object literal for the '<em><b>Constant</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__CONSTANT = eINSTANCE.getblock_Constant();

    /**
     * The meta object literal for the '<em><b>Abstraction</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__ABSTRACTION = eINSTANCE.getblock_Abstraction();

    /**
     * The meta object literal for the '<em><b>Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__STATEMENT = eINSTANCE.getblock_Statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.statement_partImpl <em>statement part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.statement_partImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstatement_part()
     * @generated
     */
    EClass STATEMENT_PART = eINSTANCE.getstatement_part();

    /**
     * The meta object literal for the '<em><b>Sequence</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_PART__SEQUENCE = eINSTANCE.getstatement_part_Sequence();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.statement_sequenceImpl <em>statement sequence</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.statement_sequenceImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstatement_sequence()
     * @generated
     */
    EClass STATEMENT_SEQUENCE = eINSTANCE.getstatement_sequence();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT_SEQUENCE__STATEMENTS = eINSTANCE.getstatement_sequence_Statements();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.statementImpl <em>statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getstatement();

    /**
     * The meta object literal for the '<em><b>Label</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__LABEL = eINSTANCE.getstatement_Label();

    /**
     * The meta object literal for the '<em><b>Simple</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__SIMPLE = eINSTANCE.getstatement_Simple();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.simple_statementImpl <em>simple statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.simple_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsimple_statement()
     * @generated
     */
    EClass SIMPLE_STATEMENT = eINSTANCE.getsimple_statement();

    /**
     * The meta object literal for the '<em><b>Assignment</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_STATEMENT__ASSIGNMENT = eINSTANCE.getsimple_statement_Assignment();

    /**
     * The meta object literal for the '<em><b>Function</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_STATEMENT__FUNCTION = eINSTANCE.getsimple_statement_Function();

    /**
     * The meta object literal for the '<em><b>Function noargs</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_STATEMENT__FUNCTION_NOARGS = eINSTANCE.getsimple_statement_Function_noargs();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.assignment_statementImpl <em>assignment statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.assignment_statementImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getassignment_statement()
     * @generated
     */
    EClass ASSIGNMENT_STATEMENT = eINSTANCE.getassignment_statement();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT_STATEMENT__VARIABLE = eINSTANCE.getassignment_statement_Variable();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT_STATEMENT__EXPRESSION = eINSTANCE.getassignment_statement_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.labelImpl <em>label</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.labelImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getlabel()
     * @generated
     */
    EClass LABEL = eINSTANCE.getlabel();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LABEL__NUMBER = eINSTANCE.getlabel_Number();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.variableImpl <em>variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.variableImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getvariable();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE__NAME = eINSTANCE.getvariable_Name();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__VARIABLE = eINSTANCE.getvariable_Variable();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.var_Impl <em>var </em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.var_Impl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvar_()
     * @generated
     */
    EClass VAR_ = eINSTANCE.getvar_();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR___EXPRESSIONS = eINSTANCE.getvar__Expressions();

    /**
     * The meta object literal for the '<em><b>Array</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR___ARRAY = eINSTANCE.getvar__Array();

    /**
     * The meta object literal for the '<em><b>Accessor</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR___ACCESSOR = eINSTANCE.getvar__Accessor();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR___NAME = eINSTANCE.getvar__Name();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR___VARIABLE = eINSTANCE.getvar__Variable();

    /**
     * The meta object literal for the '<em><b>Pointer</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR___POINTER = eINSTANCE.getvar__Pointer();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.expression_listImpl <em>expression list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.expression_listImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getexpression_list()
     * @generated
     */
    EClass EXPRESSION_LIST = eINSTANCE.getexpression_list();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_LIST__EXPRESSIONS = eINSTANCE.getexpression_list_Expressions();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.expressionImpl <em>expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.expressionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getexpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getexpression();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__EXPRESSIONS = eINSTANCE.getexpression_Expressions();

    /**
     * The meta object literal for the '<em><b>Operators</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__OPERATORS = eINSTANCE.getexpression_Operators();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.simple_expressionImpl <em>simple expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.simple_expressionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsimple_expression()
     * @generated
     */
    EClass SIMPLE_EXPRESSION = eINSTANCE.getsimple_expression();

    /**
     * The meta object literal for the '<em><b>Prefix Operator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_EXPRESSION__PREFIX_OPERATOR = eINSTANCE.getsimple_expression_PrefixOperator();

    /**
     * The meta object literal for the '<em><b>Terms</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_EXPRESSION__TERMS = eINSTANCE.getsimple_expression_Terms();

    /**
     * The meta object literal for the '<em><b>Operators</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_EXPRESSION__OPERATORS = eINSTANCE.getsimple_expression_Operators();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.termImpl <em>term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.termImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getterm()
     * @generated
     */
    EClass TERM = eINSTANCE.getterm();

    /**
     * The meta object literal for the '<em><b>Factors</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__FACTORS = eINSTANCE.getterm_Factors();

    /**
     * The meta object literal for the '<em><b>Operators</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TERM__OPERATORS = eINSTANCE.getterm_Operators();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.factorImpl <em>factor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.factorImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfactor()
     * @generated
     */
    EClass FACTOR = eINSTANCE.getfactor();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__VARIABLE = eINSTANCE.getfactor_Variable();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__NUMBER = eINSTANCE.getfactor_Number();

    /**
     * The meta object literal for the '<em><b>String</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FACTOR__STRING = eINSTANCE.getfactor_String();

    /**
     * The meta object literal for the '<em><b>Set</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__SET = eINSTANCE.getfactor_Set();

    /**
     * The meta object literal for the '<em><b>Nil</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FACTOR__NIL = eINSTANCE.getfactor_Nil();

    /**
     * The meta object literal for the '<em><b>Boolean</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FACTOR__BOOLEAN = eINSTANCE.getfactor_Boolean();

    /**
     * The meta object literal for the '<em><b>Function</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__FUNCTION = eINSTANCE.getfactor_Function();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__EXPRESSION = eINSTANCE.getfactor_Expression();

    /**
     * The meta object literal for the '<em><b>Not</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__NOT = eINSTANCE.getfactor_Not();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.function_designatorImpl <em>function designator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.function_designatorImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_designator()
     * @generated
     */
    EClass FUNCTION_DESIGNATOR = eINSTANCE.getfunction_designator();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_DESIGNATOR__NAME = eINSTANCE.getfunction_designator_Name();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DESIGNATOR__EXPRESSIONS = eINSTANCE.getfunction_designator_Expressions();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.function_procedure_declarationImpl <em>function procedure declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.function_procedure_declarationImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_procedure_declaration()
     * @generated
     */
    EClass FUNCTION_PROCEDURE_DECLARATION = eINSTANCE.getfunction_procedure_declaration();

    /**
     * The meta object literal for the '<em><b>Procedures</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_PROCEDURE_DECLARATION__PROCEDURES = eINSTANCE.getfunction_procedure_declaration_Procedures();

    /**
     * The meta object literal for the '<em><b>Functions</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_PROCEDURE_DECLARATION__FUNCTIONS = eINSTANCE.getfunction_procedure_declaration_Functions();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.function_headingImpl <em>function heading</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.function_headingImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_heading()
     * @generated
     */
    EClass FUNCTION_HEADING = eINSTANCE.getfunction_heading();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_HEADING__NAME = eINSTANCE.getfunction_heading_Name();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_HEADING__PARAMETERS = eINSTANCE.getfunction_heading_Parameters();

    /**
     * The meta object literal for the '<em><b>Return Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_HEADING__RETURN_TYPE = eINSTANCE.getfunction_heading_ReturnType();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.function_declarationImpl <em>function declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.function_declarationImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getfunction_declaration()
     * @generated
     */
    EClass FUNCTION_DECLARATION = eINSTANCE.getfunction_declaration();

    /**
     * The meta object literal for the '<em><b>Heading</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DECLARATION__HEADING = eINSTANCE.getfunction_declaration_Heading();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DECLARATION__BLOCK = eINSTANCE.getfunction_declaration_Block();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.formal_parameter_listImpl <em>formal parameter list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.formal_parameter_listImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getformal_parameter_list()
     * @generated
     */
    EClass FORMAL_PARAMETER_LIST = eINSTANCE.getformal_parameter_list();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_LIST__PARAMETERS = eINSTANCE.getformal_parameter_list_Parameters();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.formal_parameter_sectionImpl <em>formal parameter section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.formal_parameter_sectionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getformal_parameter_section()
     * @generated
     */
    EClass FORMAL_PARAMETER_SECTION = eINSTANCE.getformal_parameter_section();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_SECTION__VALUE = eINSTANCE.getformal_parameter_section_Value();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_SECTION__VARIABLE = eINSTANCE.getformal_parameter_section_Variable();

    /**
     * The meta object literal for the '<em><b>Procedure</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_SECTION__PROCEDURE = eINSTANCE.getformal_parameter_section_Procedure();

    /**
     * The meta object literal for the '<em><b>Function</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_SECTION__FUNCTION = eINSTANCE.getformal_parameter_section_Function();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.value_parameter_sectionImpl <em>value parameter section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.value_parameter_sectionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvalue_parameter_section()
     * @generated
     */
    EClass VALUE_PARAMETER_SECTION = eINSTANCE.getvalue_parameter_section();

    /**
     * The meta object literal for the '<em><b>Identifiers</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VALUE_PARAMETER_SECTION__IDENTIFIERS = eINSTANCE.getvalue_parameter_section_Identifiers();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VALUE_PARAMETER_SECTION__TYPE = eINSTANCE.getvalue_parameter_section_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.identifier_listImpl <em>identifier list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.identifier_listImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getidentifier_list()
     * @generated
     */
    EClass IDENTIFIER_LIST = eINSTANCE.getidentifier_list();

    /**
     * The meta object literal for the '<em><b>Names</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IDENTIFIER_LIST__NAMES = eINSTANCE.getidentifier_list_Names();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.parameter_typeImpl <em>parameter type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.parameter_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getparameter_type()
     * @generated
     */
    EClass PARAMETER_TYPE = eINSTANCE.getparameter_type();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PARAMETER_TYPE__NAME = eINSTANCE.getparameter_type_Name();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.variable_parameter_sectionImpl <em>variable parameter section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.variable_parameter_sectionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_parameter_section()
     * @generated
     */
    EClass VARIABLE_PARAMETER_SECTION = eINSTANCE.getvariable_parameter_section();

    /**
     * The meta object literal for the '<em><b>Indentifiers</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_PARAMETER_SECTION__INDENTIFIERS = eINSTANCE.getvariable_parameter_section_Indentifiers();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_PARAMETER_SECTION__TYPE = eINSTANCE.getvariable_parameter_section_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.procedure_declarationImpl <em>procedure declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.procedure_declarationImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_declaration()
     * @generated
     */
    EClass PROCEDURE_DECLARATION = eINSTANCE.getprocedure_declaration();

    /**
     * The meta object literal for the '<em><b>Heading</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_DECLARATION__HEADING = eINSTANCE.getprocedure_declaration_Heading();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_DECLARATION__BLOCK = eINSTANCE.getprocedure_declaration_Block();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.procedure_headingImpl <em>procedure heading</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.procedure_headingImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getprocedure_heading()
     * @generated
     */
    EClass PROCEDURE_HEADING = eINSTANCE.getprocedure_heading();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROCEDURE_HEADING__NAME = eINSTANCE.getprocedure_heading_Name();

    /**
     * The meta object literal for the '<em><b>Parameters</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_HEADING__PARAMETERS = eINSTANCE.getprocedure_heading_Parameters();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.setImpl <em>set</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.setImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getset()
     * @generated
     */
    EClass SET = eINSTANCE.getset();

    /**
     * The meta object literal for the '<em><b>Brackets</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SET__BRACKETS = eINSTANCE.getset_Brackets();

    /**
     * The meta object literal for the '<em><b>Expressions</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET__EXPRESSIONS = eINSTANCE.getset_Expressions();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.numberImpl <em>number</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.numberImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getnumber()
     * @generated
     */
    EClass NUMBER = eINSTANCE.getnumber();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference NUMBER__NUMBER = eINSTANCE.getnumber_Number();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.any_numberImpl <em>any number</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.any_numberImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getany_number()
     * @generated
     */
    EClass ANY_NUMBER = eINSTANCE.getany_number();

    /**
     * The meta object literal for the '<em><b>Integer</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANY_NUMBER__INTEGER = eINSTANCE.getany_number_Integer();

    /**
     * The meta object literal for the '<em><b>Real</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANY_NUMBER__REAL = eINSTANCE.getany_number_Real();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.label_declarationImpl <em>label declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.label_declarationImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getlabel_declaration()
     * @generated
     */
    EClass LABEL_DECLARATION = eINSTANCE.getlabel_declaration();

    /**
     * The meta object literal for the '<em><b>Labels</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LABEL_DECLARATION__LABELS = eINSTANCE.getlabel_declaration_Labels();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.constantImpl <em>constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.constantImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconstant()
     * @generated
     */
    EClass CONSTANT = eINSTANCE.getconstant();

    /**
     * The meta object literal for the '<em><b>Opterator</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT__OPTERATOR = eINSTANCE.getconstant_Opterator();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT__NAME = eINSTANCE.getconstant_Name();

    /**
     * The meta object literal for the '<em><b>Number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__NUMBER = eINSTANCE.getconstant_Number();

    /**
     * The meta object literal for the '<em><b>String</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT__STRING = eINSTANCE.getconstant_String();

    /**
     * The meta object literal for the '<em><b>Bool Literal</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT__BOOL_LITERAL = eINSTANCE.getconstant_BoolLiteral();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.constant_definition_partImpl <em>constant definition part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.constant_definition_partImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconstant_definition_part()
     * @generated
     */
    EClass CONSTANT_DEFINITION_PART = eINSTANCE.getconstant_definition_part();

    /**
     * The meta object literal for the '<em><b>Consts</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT_DEFINITION_PART__CONSTS = eINSTANCE.getconstant_definition_part_Consts();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.constant_definitionImpl <em>constant definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.constant_definitionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getconstant_definition()
     * @generated
     */
    EClass CONSTANT_DEFINITION = eINSTANCE.getconstant_definition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT_DEFINITION__NAME = eINSTANCE.getconstant_definition_Name();

    /**
     * The meta object literal for the '<em><b>Const</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT_DEFINITION__CONST = eINSTANCE.getconstant_definition_Const();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.type_definition_partImpl <em>type definition part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.type_definition_partImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype_definition_part()
     * @generated
     */
    EClass TYPE_DEFINITION_PART = eINSTANCE.gettype_definition_part();

    /**
     * The meta object literal for the '<em><b>Types</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_DEFINITION_PART__TYPES = eINSTANCE.gettype_definition_part_Types();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.type_definitionImpl <em>type definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.type_definitionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype_definition()
     * @generated
     */
    EClass TYPE_DEFINITION = eINSTANCE.gettype_definition();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_DEFINITION__NAME = eINSTANCE.gettype_definition_Name();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_DEFINITION__TYPE = eINSTANCE.gettype_definition_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.typeImpl <em>type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#gettype()
     * @generated
     */
    EClass TYPE = eINSTANCE.gettype();

    /**
     * The meta object literal for the '<em><b>Simple</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE__SIMPLE = eINSTANCE.gettype_Simple();

    /**
     * The meta object literal for the '<em><b>Structured</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE__STRUCTURED = eINSTANCE.gettype_Structured();

    /**
     * The meta object literal for the '<em><b>Pointer</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE__POINTER = eINSTANCE.gettype_Pointer();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.simple_typeImpl <em>simple type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.simple_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsimple_type()
     * @generated
     */
    EClass SIMPLE_TYPE = eINSTANCE.getsimple_type();

    /**
     * The meta object literal for the '<em><b>Subrange</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_TYPE__SUBRANGE = eINSTANCE.getsimple_type_Subrange();

    /**
     * The meta object literal for the '<em><b>Enumerated</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_TYPE__ENUMERATED = eINSTANCE.getsimple_type_Enumerated();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIMPLE_TYPE__NAME = eINSTANCE.getsimple_type_Name();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.subrange_typeImpl <em>subrange type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.subrange_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getsubrange_type()
     * @generated
     */
    EClass SUBRANGE_TYPE = eINSTANCE.getsubrange_type();

    /**
     * The meta object literal for the '<em><b>Initial Const</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBRANGE_TYPE__INITIAL_CONST = eINSTANCE.getsubrange_type_InitialConst();

    /**
     * The meta object literal for the '<em><b>Final Const</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBRANGE_TYPE__FINAL_CONST = eINSTANCE.getsubrange_type_FinalConst();

    /**
     * The meta object literal for the '<em><b>Subrange</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SUBRANGE_TYPE__SUBRANGE = eINSTANCE.getsubrange_type_Subrange();

    /**
     * The meta object literal for the '<em><b>Const</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBRANGE_TYPE__CONST = eINSTANCE.getsubrange_type_Const();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.enumerated_typeImpl <em>enumerated type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.enumerated_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getenumerated_type()
     * @generated
     */
    EClass ENUMERATED_TYPE = eINSTANCE.getenumerated_type();

    /**
     * The meta object literal for the '<em><b>Identifiers</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ENUMERATED_TYPE__IDENTIFIERS = eINSTANCE.getenumerated_type_Identifiers();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.strutured_typeImpl <em>strutured type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.strutured_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getstrutured_type()
     * @generated
     */
    EClass STRUTURED_TYPE = eINSTANCE.getstrutured_type();

    /**
     * The meta object literal for the '<em><b>Packed</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRUTURED_TYPE__PACKED = eINSTANCE.getstrutured_type_Packed();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRUTURED_TYPE__TYPE = eINSTANCE.getstrutured_type_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.unpacked_strutured_typeImpl <em>unpacked strutured type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.unpacked_strutured_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getunpacked_strutured_type()
     * @generated
     */
    EClass UNPACKED_STRUTURED_TYPE = eINSTANCE.getunpacked_strutured_type();

    /**
     * The meta object literal for the '<em><b>Set</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNPACKED_STRUTURED_TYPE__SET = eINSTANCE.getunpacked_strutured_type_Set();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.set_typeImpl <em>set type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.set_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getset_type()
     * @generated
     */
    EClass SET_TYPE = eINSTANCE.getset_type();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SET_TYPE__TYPE = eINSTANCE.getset_type_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.pointer_typeImpl <em>pointer type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.pointer_typeImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getpointer_type()
     * @generated
     */
    EClass POINTER_TYPE = eINSTANCE.getpointer_type();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POINTER_TYPE__TYPE = eINSTANCE.getpointer_type_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.variable_declaration_partImpl <em>variable declaration part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.variable_declaration_partImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_declaration_part()
     * @generated
     */
    EClass VARIABLE_DECLARATION_PART = eINSTANCE.getvariable_declaration_part();

    /**
     * The meta object literal for the '<em><b>Sections</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION_PART__SECTIONS = eINSTANCE.getvariable_declaration_part_Sections();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.variable_sectionImpl <em>variable section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.variable_sectionImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_section()
     * @generated
     */
    EClass VARIABLE_SECTION = eINSTANCE.getvariable_section();

    /**
     * The meta object literal for the '<em><b>Identifiers</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_SECTION__IDENTIFIERS = eINSTANCE.getvariable_section_Identifiers();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_SECTION__TYPE = eINSTANCE.getvariable_section_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.pascal.pascal.impl.variable_identifier_listImpl <em>variable identifier list</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.pascal.pascal.impl.variable_identifier_listImpl
     * @see org.xtext.example.pascal.pascal.impl.PascalPackageImpl#getvariable_identifier_list()
     * @generated
     */
    EClass VARIABLE_IDENTIFIER_LIST = eINSTANCE.getvariable_identifier_list();

    /**
     * The meta object literal for the '<em><b>Names</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_IDENTIFIER_LIST__NAMES = eINSTANCE.getvariable_identifier_list_Names();

  }

} //PascalPackage
