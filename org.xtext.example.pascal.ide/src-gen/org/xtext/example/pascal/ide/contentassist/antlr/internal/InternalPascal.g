/*
 * generated by Xtext 2.15.0
 */
grammar InternalPascal;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@lexer::header {
package org.xtext.example.pascal.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.pascal.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.pascal.services.PascalGrammarAccess;

}
@parser::members {
	private PascalGrammarAccess grammarAccess;

	public void setGrammarAccess(PascalGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRulepascal
entryRulepascal
:
{ before(grammarAccess.getPascalRule()); }
	 rulepascal
{ after(grammarAccess.getPascalRule()); } 
	 EOF 
;

// Rule pascal
rulepascal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPascalAccess().getProgramAssignment()); }
		(rule__Pascal__ProgramAssignment)
		{ after(grammarAccess.getPascalAccess().getProgramAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprogram
entryRuleprogram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleprogram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule program
ruleprogram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprogram_heading_block
entryRuleprogram_heading_block
:
{ before(grammarAccess.getProgram_heading_blockRule()); }
	 ruleprogram_heading_block
{ after(grammarAccess.getProgram_heading_blockRule()); } 
	 EOF 
;

// Rule program_heading_block
ruleprogram_heading_block 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgram_heading_blockAccess().getGroup()); }
		(rule__Program_heading_block__Group__0)
		{ after(grammarAccess.getProgram_heading_blockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblock
entryRuleblock
:
{ before(grammarAccess.getBlockRule()); }
	 ruleblock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule block
ruleblock 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockAccess().getGroup()); }
		(rule__Block__Group__0)
		{ after(grammarAccess.getBlockAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement_part
entryRulestatement_part
:
{ before(grammarAccess.getStatement_partRule()); }
	 rulestatement_part
{ after(grammarAccess.getStatement_partRule()); } 
	 EOF 
;

// Rule statement_part
rulestatement_part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatement_partAccess().getGroup()); }
		(rule__Statement_part__Group__0)
		{ after(grammarAccess.getStatement_partAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement_sequence
entryRulestatement_sequence
:
{ before(grammarAccess.getStatement_sequenceRule()); }
	 rulestatement_sequence
{ after(grammarAccess.getStatement_sequenceRule()); } 
	 EOF 
;

// Rule statement_sequence
rulestatement_sequence 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatement_sequenceAccess().getGroup()); }
		(rule__Statement_sequence__Group__0)
		{ after(grammarAccess.getStatement_sequenceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestatement
entryRulestatement
:
{ before(grammarAccess.getStatementRule()); }
	 rulestatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule statement
rulestatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getGroup()); }
		(rule__Statement__Group__0)
		{ after(grammarAccess.getStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesimple_statement
entryRulesimple_statement
:
{ before(grammarAccess.getSimple_statementRule()); }
	 rulesimple_statement
{ after(grammarAccess.getSimple_statementRule()); } 
	 EOF 
;

// Rule simple_statement
rulesimple_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimple_statementAccess().getAlternatives()); }
		(rule__Simple_statement__Alternatives)?
		{ after(grammarAccess.getSimple_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestructured_statement
entryRulestructured_statement
:
{ before(grammarAccess.getStructured_statementRule()); }
	 rulestructured_statement
{ after(grammarAccess.getStructured_statementRule()); } 
	 EOF 
;

// Rule structured_statement
rulestructured_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructured_statementAccess().getAlternatives()); }
		(rule__Structured_statement__Alternatives)
		{ after(grammarAccess.getStructured_statementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulecompound_statement
entryRulecompound_statement
:
{ before(grammarAccess.getCompound_statementRule()); }
	 rulecompound_statement
{ after(grammarAccess.getCompound_statementRule()); } 
	 EOF 
;

// Rule compound_statement
rulecompound_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompound_statementAccess().getGroup()); }
		(rule__Compound_statement__Group__0)
		{ after(grammarAccess.getCompound_statementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleassignment_statement
entryRuleassignment_statement
:
{ before(grammarAccess.getAssignment_statementRule()); }
	 ruleassignment_statement
{ after(grammarAccess.getAssignment_statementRule()); } 
	 EOF 
;

// Rule assignment_statement
ruleassignment_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignment_statementAccess().getGroup()); }
		(rule__Assignment_statement__Group__0)
		{ after(grammarAccess.getAssignment_statementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelabel
entryRulelabel
:
{ before(grammarAccess.getLabelRule()); }
	 rulelabel
{ after(grammarAccess.getLabelRule()); } 
	 EOF 
;

// Rule label
rulelabel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabelAccess().getAlternatives()); }
		(rule__Label__Alternatives)
		{ after(grammarAccess.getLabelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariable
entryRulevariable
:
{ before(grammarAccess.getVariableRule()); }
	 rulevariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule variable
rulevariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getNameAssignment()); }
		(rule__Variable__NameAssignment)
		{ after(grammarAccess.getVariableAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression_list
entryRuleexpression_list
:
{ before(grammarAccess.getExpression_listRule()); }
	 ruleexpression_list
{ after(grammarAccess.getExpression_listRule()); } 
	 EOF 
;

// Rule expression_list
ruleexpression_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpression_listAccess().getGroup()); }
		(rule__Expression_list__Group__0)
		{ after(grammarAccess.getExpression_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleexpression
entryRuleexpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleexpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule expression
ruleexpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionsAssignment()); }
		(rule__Expression__ExpressionsAssignment)
		{ after(grammarAccess.getExpressionAccess().getExpressionsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesimple_expression
entryRulesimple_expression
:
{ before(grammarAccess.getSimple_expressionRule()); }
	 rulesimple_expression
{ after(grammarAccess.getSimple_expressionRule()); } 
	 EOF 
;

// Rule simple_expression
rulesimple_expression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getGroup()); }
		(rule__Simple_expression__Group__0)
		{ after(grammarAccess.getSimple_expressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleterm
entryRuleterm
:
{ before(grammarAccess.getTermRule()); }
	 ruleterm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule term
ruleterm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTermAccess().getGroup()); }
		(rule__Term__Group__0)
		{ after(grammarAccess.getTermAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefactor
entryRulefactor
:
{ before(grammarAccess.getFactorRule()); }
	 rulefactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule factor
rulefactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getAlternatives()); }
		(rule__Factor__Alternatives)
		{ after(grammarAccess.getFactorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction_designator
entryRulefunction_designator
:
{ before(grammarAccess.getFunction_designatorRule()); }
	 rulefunction_designator
{ after(grammarAccess.getFunction_designatorRule()); } 
	 EOF 
;

// Rule function_designator
rulefunction_designator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunction_designatorAccess().getGroup()); }
		(rule__Function_designator__Group__0)
		{ after(grammarAccess.getFunction_designatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction_procedure_declaration
entryRulefunction_procedure_declaration
:
{ before(grammarAccess.getFunction_procedure_declarationRule()); }
	 rulefunction_procedure_declaration
{ after(grammarAccess.getFunction_procedure_declarationRule()); } 
	 EOF 
;

// Rule function_procedure_declaration
rulefunction_procedure_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getFunction_procedure_declarationAccess().getGroup()); }
			(rule__Function_procedure_declaration__Group__0)
			{ after(grammarAccess.getFunction_procedure_declarationAccess().getGroup()); }
		)
		(
			{ before(grammarAccess.getFunction_procedure_declarationAccess().getGroup()); }
			(rule__Function_procedure_declaration__Group__0)*
			{ after(grammarAccess.getFunction_procedure_declarationAccess().getGroup()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction_heading
entryRulefunction_heading
:
{ before(grammarAccess.getFunction_headingRule()); }
	 rulefunction_heading
{ after(grammarAccess.getFunction_headingRule()); } 
	 EOF 
;

// Rule function_heading
rulefunction_heading 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunction_headingAccess().getGroup()); }
		(rule__Function_heading__Group__0)
		{ after(grammarAccess.getFunction_headingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefunction_declaration
entryRulefunction_declaration
:
{ before(grammarAccess.getFunction_declarationRule()); }
	 rulefunction_declaration
{ after(grammarAccess.getFunction_declarationRule()); } 
	 EOF 
;

// Rule function_declaration
rulefunction_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getGroup()); }
		(rule__Function_declaration__Group__0)
		{ after(grammarAccess.getFunction_declarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleformal_parameter_list
entryRuleformal_parameter_list
:
{ before(grammarAccess.getFormal_parameter_listRule()); }
	 ruleformal_parameter_list
{ after(grammarAccess.getFormal_parameter_listRule()); } 
	 EOF 
;

// Rule formal_parameter_list
ruleformal_parameter_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormal_parameter_listAccess().getGroup()); }
		(rule__Formal_parameter_list__Group__0)
		{ after(grammarAccess.getFormal_parameter_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleformal_parameter_section
entryRuleformal_parameter_section
:
{ before(grammarAccess.getFormal_parameter_sectionRule()); }
	 ruleformal_parameter_section
{ after(grammarAccess.getFormal_parameter_sectionRule()); } 
	 EOF 
;

// Rule formal_parameter_section
ruleformal_parameter_section 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getAlternatives()); }
		(rule__Formal_parameter_section__Alternatives)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevalue_parameter_section
entryRulevalue_parameter_section
:
{ before(grammarAccess.getValue_parameter_sectionRule()); }
	 rulevalue_parameter_section
{ after(grammarAccess.getValue_parameter_sectionRule()); } 
	 EOF 
;

// Rule value_parameter_section
rulevalue_parameter_section 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValue_parameter_sectionAccess().getGroup()); }
		(rule__Value_parameter_section__Group__0)
		{ after(grammarAccess.getValue_parameter_sectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleidentifier_list
entryRuleidentifier_list
:
{ before(grammarAccess.getIdentifier_listRule()); }
	 ruleidentifier_list
{ after(grammarAccess.getIdentifier_listRule()); } 
	 EOF 
;

// Rule identifier_list
ruleidentifier_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getGroup()); }
		(rule__Identifier_list__Group__0)
		{ after(grammarAccess.getIdentifier_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleparameter_type
entryRuleparameter_type
:
{ before(grammarAccess.getParameter_typeRule()); }
	 ruleparameter_type
{ after(grammarAccess.getParameter_typeRule()); } 
	 EOF 
;

// Rule parameter_type
ruleparameter_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameter_typeAccess().getNameAssignment()); }
		(rule__Parameter_type__NameAssignment)
		{ after(grammarAccess.getParameter_typeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariable_parameter_section
entryRulevariable_parameter_section
:
{ before(grammarAccess.getVariable_parameter_sectionRule()); }
	 rulevariable_parameter_section
{ after(grammarAccess.getVariable_parameter_sectionRule()); } 
	 EOF 
;

// Rule variable_parameter_section
rulevariable_parameter_section 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_parameter_sectionAccess().getGroup()); }
		(rule__Variable_parameter_section__Group__0)
		{ after(grammarAccess.getVariable_parameter_sectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprocedure_declaration
entryRuleprocedure_declaration
:
{ before(grammarAccess.getProcedure_declarationRule()); }
	 ruleprocedure_declaration
{ after(grammarAccess.getProcedure_declarationRule()); } 
	 EOF 
;

// Rule procedure_declaration
ruleprocedure_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedure_declarationAccess().getGroup()); }
		(rule__Procedure_declaration__Group__0)
		{ after(grammarAccess.getProcedure_declarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleprocedure_heading
entryRuleprocedure_heading
:
{ before(grammarAccess.getProcedure_headingRule()); }
	 ruleprocedure_heading
{ after(grammarAccess.getProcedure_headingRule()); } 
	 EOF 
;

// Rule procedure_heading
ruleprocedure_heading 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcedure_headingAccess().getGroup()); }
		(rule__Procedure_heading__Group__0)
		{ after(grammarAccess.getProcedure_headingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenumber
entryRulenumber
:
{ before(grammarAccess.getNumberRule()); }
	 rulenumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule number
rulenumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getNumberAssignment()); }
		(rule__Number__NumberAssignment)
		{ after(grammarAccess.getNumberAccess().getNumberAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleany_number
entryRuleany_number
:
{ before(grammarAccess.getAny_numberRule()); }
	 ruleany_number
{ after(grammarAccess.getAny_numberRule()); } 
	 EOF 
;

// Rule any_number
ruleany_number 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAny_numberAccess().getAlternatives()); }
		(rule__Any_number__Alternatives)
		{ after(grammarAccess.getAny_numberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulelabel_declaration
entryRulelabel_declaration
:
{ before(grammarAccess.getLabel_declarationRule()); }
	 rulelabel_declaration
{ after(grammarAccess.getLabel_declarationRule()); } 
	 EOF 
;

// Rule label_declaration
rulelabel_declaration 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLabel_declarationAccess().getGroup()); }
		(rule__Label_declaration__Group__0)
		{ after(grammarAccess.getLabel_declarationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant
entryRuleconstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleconstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule constant
ruleconstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant_definition_part
entryRuleconstant_definition_part
:
{ before(grammarAccess.getConstant_definition_partRule()); }
	 ruleconstant_definition_part
{ after(grammarAccess.getConstant_definition_partRule()); } 
	 EOF 
;

// Rule constant_definition_part
ruleconstant_definition_part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstant_definition_partAccess().getGroup()); }
		(rule__Constant_definition_part__Group__0)
		{ after(grammarAccess.getConstant_definition_partAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleconstant_definition
entryRuleconstant_definition
:
{ before(grammarAccess.getConstant_definitionRule()); }
	 ruleconstant_definition
{ after(grammarAccess.getConstant_definitionRule()); } 
	 EOF 
;

// Rule constant_definition
ruleconstant_definition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstant_definitionAccess().getGroup()); }
		(rule__Constant_definition__Group__0)
		{ after(grammarAccess.getConstant_definitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_definition_part
entryRuletype_definition_part
:
{ before(grammarAccess.getType_definition_partRule()); }
	 ruletype_definition_part
{ after(grammarAccess.getType_definition_partRule()); } 
	 EOF 
;

// Rule type_definition_part
ruletype_definition_part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_definition_partAccess().getGroup()); }
		(rule__Type_definition_part__Group__0)
		{ after(grammarAccess.getType_definition_partAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype_definition
entryRuletype_definition
:
{ before(grammarAccess.getType_definitionRule()); }
	 ruletype_definition
{ after(grammarAccess.getType_definitionRule()); } 
	 EOF 
;

// Rule type_definition
ruletype_definition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getType_definitionAccess().getGroup()); }
		(rule__Type_definition__Group__0)
		{ after(grammarAccess.getType_definitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuletype
entryRuletype
:
{ before(grammarAccess.getTypeRule()); }
	 ruletype
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule type
ruletype 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesimple_type
entryRulesimple_type
:
{ before(grammarAccess.getSimple_typeRule()); }
	 rulesimple_type
{ after(grammarAccess.getSimple_typeRule()); } 
	 EOF 
;

// Rule simple_type
rulesimple_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSimple_typeAccess().getNameAssignment()); }
		(rule__Simple_type__NameAssignment)
		{ after(grammarAccess.getSimple_typeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestructured_type
entryRulestructured_type
:
{ before(grammarAccess.getStructured_typeRule()); }
	 rulestructured_type
{ after(grammarAccess.getStructured_typeRule()); } 
	 EOF 
;

// Rule structured_type
rulestructured_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStructured_typeAccess().getRecordAssignment()); }
		(rule__Structured_type__RecordAssignment)
		{ after(grammarAccess.getStructured_typeAccess().getRecordAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerecord_type
entryRulerecord_type
:
{ before(grammarAccess.getRecord_typeRule()); }
	 rulerecord_type
{ after(grammarAccess.getRecord_typeRule()); } 
	 EOF 
;

// Rule record_type
rulerecord_type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecord_typeAccess().getGroup()); }
		(rule__Record_type__Group__0)
		{ after(grammarAccess.getRecord_typeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefield_list
entryRulefield_list
:
{ before(grammarAccess.getField_listRule()); }
	 rulefield_list
{ after(grammarAccess.getField_listRule()); } 
	 EOF 
;

// Rule field_list
rulefield_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getField_listAccess().getGroup()); }
		(rule__Field_list__Group__0)
		{ after(grammarAccess.getField_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerecord_section
entryRulerecord_section
:
{ before(grammarAccess.getRecord_sectionRule()); }
	 rulerecord_section
{ after(grammarAccess.getRecord_sectionRule()); } 
	 EOF 
;

// Rule record_section
rulerecord_section 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRecord_sectionAccess().getGroup()); }
		(rule__Record_section__Group__0)
		{ after(grammarAccess.getRecord_sectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulesigned_number
entryRulesigned_number
:
{ before(grammarAccess.getSigned_numberRule()); }
	 rulesigned_number
{ after(grammarAccess.getSigned_numberRule()); } 
	 EOF 
;

// Rule signed_number
rulesigned_number 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSigned_numberAccess().getAlternatives()); }
		(rule__Signed_number__Alternatives)
		{ after(grammarAccess.getSigned_numberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleunsigned_number
entryRuleunsigned_number
:
{ before(grammarAccess.getUnsigned_numberRule()); }
	 ruleunsigned_number
{ after(grammarAccess.getUnsigned_numberRule()); } 
	 EOF 
;

// Rule unsigned_number
ruleunsigned_number 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUnsigned_numberAccess().getAlternatives()); }
		(rule__Unsigned_number__Alternatives)
		{ after(grammarAccess.getUnsigned_numberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariable_declaration_part
entryRulevariable_declaration_part
:
{ before(grammarAccess.getVariable_declaration_partRule()); }
	 rulevariable_declaration_part
{ after(grammarAccess.getVariable_declaration_partRule()); } 
	 EOF 
;

// Rule variable_declaration_part
rulevariable_declaration_part 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_declaration_partAccess().getGroup()); }
		(rule__Variable_declaration_part__Group__0)
		{ after(grammarAccess.getVariable_declaration_partAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariable_section
entryRulevariable_section
:
{ before(grammarAccess.getVariable_sectionRule()); }
	 rulevariable_section
{ after(grammarAccess.getVariable_sectionRule()); } 
	 EOF 
;

// Rule variable_section
rulevariable_section 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_sectionAccess().getGroup()); }
		(rule__Variable_section__Group__0)
		{ after(grammarAccess.getVariable_sectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulevariable_identifier_list
entryRulevariable_identifier_list
:
{ before(grammarAccess.getVariable_identifier_listRule()); }
	 rulevariable_identifier_list
{ after(grammarAccess.getVariable_identifier_listRule()); } 
	 EOF 
;

// Rule variable_identifier_list
rulevariable_identifier_list 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariable_identifier_listAccess().getGroup()); }
		(rule__Variable_identifier_list__Group__0)
		{ after(grammarAccess.getVariable_identifier_listAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulewhile_statement
entryRulewhile_statement
:
{ before(grammarAccess.getWhile_statementRule()); }
	 rulewhile_statement
{ after(grammarAccess.getWhile_statementRule()); } 
	 EOF 
;

// Rule while_statement
rulewhile_statement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhile_statementAccess().getGroup()); }
		(rule__While_statement__Group__0)
		{ after(grammarAccess.getWhile_statementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSimpleAssignment_1_0()); }
		(rule__Statement__SimpleAssignment_1_0)
		{ after(grammarAccess.getStatementAccess().getSimpleAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getStructuredAssignment_1_1()); }
		(rule__Statement__StructuredAssignment_1_1)
		{ after(grammarAccess.getStatementAccess().getStructuredAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_0()); }
		(rule__Simple_statement__AssignmentAssignment_0)
		{ after(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimple_statementAccess().getFunctionAssignment_1()); }
		(rule__Simple_statement__FunctionAssignment_1)
		{ after(grammarAccess.getSimple_statementAccess().getFunctionAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getSimple_statementAccess().getFunction_noargsAssignment_2()); }
		(rule__Simple_statement__Function_noargsAssignment_2)
		{ after(grammarAccess.getSimple_statementAccess().getFunction_noargsAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structured_statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructured_statementAccess().getCompoundAssignment_0()); }
		(rule__Structured_statement__CompoundAssignment_0)
		{ after(grammarAccess.getStructured_statementAccess().getCompoundAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStructured_statementAccess().getWhile_stmtAssignment_1()); }
		(rule__Structured_statement__While_stmtAssignment_1)
		{ after(grammarAccess.getStructured_statementAccess().getWhile_stmtAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getNumberAssignment_0()); }
		(rule__Label__NumberAssignment_0)
		{ after(grammarAccess.getLabelAccess().getNumberAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLabelAccess().getNumberAssignment_1()); }
		(rule__Label__NumberAssignment_1)
		{ after(grammarAccess.getLabelAccess().getNumberAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getGroup_2_0()); }
		(rule__Simple_expression__Group_2_0__0)
		{ after(grammarAccess.getSimple_expressionAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimple_expressionAccess().getTermsAssignment_2_1()); }
		(rule__Simple_expression__TermsAssignment_2_1)
		{ after(grammarAccess.getSimple_expressionAccess().getTermsAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Alternatives_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getOperatorsAssignment_2_0_0_0()); }
		(rule__Simple_expression__OperatorsAssignment_2_0_0_0)
		{ after(grammarAccess.getSimple_expressionAccess().getOperatorsAssignment_2_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getSimple_expressionAccess().getOperatorsAssignment_2_0_0_1()); }
		(rule__Simple_expression__OperatorsAssignment_2_0_0_1)
		{ after(grammarAccess.getSimple_expressionAccess().getOperatorsAssignment_2_0_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_0()); }
		(rule__Term__OperatorsAssignment_1_0_0)
		{ after(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_1()); }
		(rule__Term__OperatorsAssignment_1_0_1)
		{ after(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getVariableAssignment_0()); }
		(rule__Factor__VariableAssignment_0)
		{ after(grammarAccess.getFactorAccess().getVariableAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getNumberAssignment_1()); }
		(rule__Factor__NumberAssignment_1)
		{ after(grammarAccess.getFactorAccess().getNumberAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getStringAssignment_2()); }
		(rule__Factor__StringAssignment_2)
		{ after(grammarAccess.getFactorAccess().getStringAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getBooleanAssignment_3()); }
		(rule__Factor__BooleanAssignment_3)
		{ after(grammarAccess.getFactorAccess().getBooleanAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getBooleanAssignment_4()); }
		(rule__Factor__BooleanAssignment_4)
		{ after(grammarAccess.getFactorAccess().getBooleanAssignment_4()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getFunctionAssignment_5()); }
		(rule__Factor__FunctionAssignment_5)
		{ after(grammarAccess.getFactorAccess().getFunctionAssignment_5()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_6()); }
		(rule__Factor__Group_6__0)
		{ after(grammarAccess.getFactorAccess().getGroup_6()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_7()); }
		(rule__Factor__Group_7__0)
		{ after(grammarAccess.getFactorAccess().getGroup_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_procedure_declaration__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_procedure_declarationAccess().getProceduresAssignment_0_0()); }
		(rule__Function_procedure_declaration__ProceduresAssignment_0_0)
		{ after(grammarAccess.getFunction_procedure_declarationAccess().getProceduresAssignment_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunction_procedure_declarationAccess().getFunctionsAssignment_0_1()); }
		(rule__Function_procedure_declaration__FunctionsAssignment_0_1)
		{ after(grammarAccess.getFunction_procedure_declarationAccess().getFunctionsAssignment_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getValueAssignment_0()); }
		(rule__Formal_parameter_section__ValueAssignment_0)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getValueAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getVariableAssignment_1()); }
		(rule__Formal_parameter_section__VariableAssignment_1)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getVariableAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getProcedureAssignment_2()); }
		(rule__Formal_parameter_section__ProcedureAssignment_2)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getProcedureAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getFunctionAssignment_3()); }
		(rule__Formal_parameter_section__FunctionAssignment_3)
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getFunctionAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Any_number__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAny_numberAccess().getUnsigned_numberParserRuleCall_0()); }
		ruleunsigned_number
		{ after(grammarAccess.getAny_numberAccess().getUnsigned_numberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getAny_numberAccess().getSigned_numberParserRuleCall_1()); }
		rulesigned_number
		{ after(grammarAccess.getAny_numberAccess().getSigned_numberParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getGroup_0()); }
		(rule__Constant__Group_0__0)
		{ after(grammarAccess.getConstantAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getStringAssignment_1()); }
		(rule__Constant__StringAssignment_1)
		{ after(grammarAccess.getConstantAccess().getStringAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getBoolLiteralAssignment_2()); }
		(rule__Constant__BoolLiteralAssignment_2)
		{ after(grammarAccess.getConstantAccess().getBoolLiteralAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getBoolLiteralAssignment_3()); }
		(rule__Constant__BoolLiteralAssignment_3)
		{ after(grammarAccess.getConstantAccess().getBoolLiteralAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNameAssignment_0_1_0()); }
		(rule__Constant__NameAssignment_0_1_0)
		{ after(grammarAccess.getConstantAccess().getNameAssignment_0_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getNumberAssignment_0_1_1()); }
		(rule__Constant__NumberAssignment_0_1_1)
		{ after(grammarAccess.getConstantAccess().getNumberAssignment_0_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getSimpleAssignment_0()); }
		(rule__Type__SimpleAssignment_0)
		{ after(grammarAccess.getTypeAccess().getSimpleAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getStructuredAssignment_1()); }
		(rule__Type__StructuredAssignment_1)
		{ after(grammarAccess.getTypeAccess().getStructuredAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_number__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSigned_numberAccess().getIntegerAssignment_0()); }
		(rule__Signed_number__IntegerAssignment_0)
		{ after(grammarAccess.getSigned_numberAccess().getIntegerAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getSigned_numberAccess().getRealAssignment_1()); }
		(rule__Signed_number__RealAssignment_1)
		{ after(grammarAccess.getSigned_numberAccess().getRealAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_number__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_numberAccess().getIntegerAssignment_0()); }
		(rule__Unsigned_number__IntegerAssignment_0)
		{ after(grammarAccess.getUnsigned_numberAccess().getIntegerAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getUnsigned_numberAccess().getRealAssignment_1()); }
		(rule__Unsigned_number__RealAssignment_1)
		{ after(grammarAccess.getUnsigned_numberAccess().getRealAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getHeadingAssignment_0()); }
	(rule__Program__HeadingAssignment_0)
	{ after(grammarAccess.getProgramAccess().getHeadingAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getBlockAssignment_1()); }
	(rule__Program__BlockAssignment_1)
	{ after(grammarAccess.getProgramAccess().getBlockAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getProgramAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program_heading_block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group__0__Impl
	rule__Program_heading_block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getProgramKeyword_0()); }
	'program'
	{ after(grammarAccess.getProgram_heading_blockAccess().getProgramKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group__1__Impl
	rule__Program_heading_block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getNameAssignment_1()); }
	(rule__Program_heading_block__NameAssignment_1)
	{ after(grammarAccess.getProgram_heading_blockAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program_heading_block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgram_heading_blockAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getProgram_heading_blockAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getLabelAssignment_0()); }
	(rule__Block__LabelAssignment_0)?
	{ after(grammarAccess.getBlockAccess().getLabelAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getTypeAssignment_1()); }
	(rule__Block__TypeAssignment_1)?
	{ after(grammarAccess.getBlockAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__2__Impl
	rule__Block__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getVariableAssignment_2()); }
	(rule__Block__VariableAssignment_2)?
	{ after(grammarAccess.getBlockAccess().getVariableAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__3__Impl
	rule__Block__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getConstantAssignment_3()); }
	(rule__Block__ConstantAssignment_3)?
	{ after(grammarAccess.getBlockAccess().getConstantAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__4__Impl
	rule__Block__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getAbstractionAssignment_4()); }
	(rule__Block__AbstractionAssignment_4)?
	{ after(grammarAccess.getBlockAccess().getAbstractionAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Block__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockAccess().getStatementAssignment_5()); }
	(rule__Block__StatementAssignment_5)
	{ after(grammarAccess.getBlockAccess().getStatementAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_part__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement_part__Group__0__Impl
	rule__Statement_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_part__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatement_partAccess().getBeginKeyword_0()); }
	'begin'
	{ after(grammarAccess.getStatement_partAccess().getBeginKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_part__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement_part__Group__1__Impl
	rule__Statement_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_part__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatement_partAccess().getSequenceAssignment_1()); }
	(rule__Statement_part__SequenceAssignment_1)
	{ after(grammarAccess.getStatement_partAccess().getSequenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_part__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement_part__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_part__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatement_partAccess().getEndKeyword_2()); }
	'end'
	{ after(grammarAccess.getStatement_partAccess().getEndKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_sequence__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement_sequence__Group__0__Impl
	rule__Statement_sequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatement_sequenceAccess().getStatementsAssignment_0()); }
	(rule__Statement_sequence__StatementsAssignment_0)
	{ after(grammarAccess.getStatement_sequenceAccess().getStatementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement_sequence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatement_sequenceAccess().getGroup_1()); }
	(rule__Statement_sequence__Group_1__0)*
	{ after(grammarAccess.getStatement_sequenceAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement_sequence__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement_sequence__Group_1__0__Impl
	rule__Statement_sequence__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatement_sequenceAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getStatement_sequenceAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement_sequence__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatement_sequenceAccess().getStatementsAssignment_1_1()); }
	(rule__Statement_sequence__StatementsAssignment_1_1)
	{ after(grammarAccess.getStatement_sequenceAccess().getStatementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getGroup_0()); }
	(rule__Statement__Group_0__0)?
	{ after(grammarAccess.getStatementAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getAlternatives_1()); }
	(rule__Statement__Alternatives_1)
	{ after(grammarAccess.getStatementAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__0__Impl
	rule__Statement__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getLabelAssignment_0_0()); }
	(rule__Statement__LabelAssignment_0_0)
	{ after(grammarAccess.getStatementAccess().getLabelAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Statement__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStatementAccess().getColonKeyword_0_1()); }
	':'
	{ after(grammarAccess.getStatementAccess().getColonKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Compound_statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group__0__Impl
	rule__Compound_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getBeginKeyword_0()); }
	'begin'
	{ after(grammarAccess.getCompound_statementAccess().getBeginKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group__1__Impl
	rule__Compound_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getSequenceAssignment_1()); }
	(rule__Compound_statement__SequenceAssignment_1)
	{ after(grammarAccess.getCompound_statementAccess().getSequenceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Compound_statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompound_statementAccess().getEndKeyword_2()); }
	'end'
	{ after(grammarAccess.getCompound_statementAccess().getEndKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment_statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_statement__Group__0__Impl
	rule__Assignment_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_statementAccess().getVariableAssignment_0()); }
	(rule__Assignment_statement__VariableAssignment_0)
	{ after(grammarAccess.getAssignment_statementAccess().getVariableAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_statement__Group__1__Impl
	rule__Assignment_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_statementAccess().getColonEqualsSignKeyword_1()); }
	':='
	{ after(grammarAccess.getAssignment_statementAccess().getColonEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignment_statement__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignment_statementAccess().getExpressionAssignment_2()); }
	(rule__Assignment_statement__ExpressionAssignment_2)
	{ after(grammarAccess.getAssignment_statementAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_list__Group__0__Impl
	rule__Expression_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_listAccess().getExpressionsAssignment_0()); }
	(rule__Expression_list__ExpressionsAssignment_0)
	{ after(grammarAccess.getExpression_listAccess().getExpressionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_listAccess().getGroup_1()); }
	(rule__Expression_list__Group_1__0)*
	{ after(grammarAccess.getExpression_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Expression_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_list__Group_1__0__Impl
	rule__Expression_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getExpression_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Expression_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpression_listAccess().getExpressionsAssignment_1_1()); }
	(rule__Expression_list__ExpressionsAssignment_1_1)
	{ after(grammarAccess.getExpression_listAccess().getExpressionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group__0__Impl
	rule__Simple_expression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getPrefixOperatorAssignment_0()); }
	(rule__Simple_expression__PrefixOperatorAssignment_0)?
	{ after(grammarAccess.getSimple_expressionAccess().getPrefixOperatorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group__1__Impl
	rule__Simple_expression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getTermsAssignment_1()); }
	(rule__Simple_expression__TermsAssignment_1)
	{ after(grammarAccess.getSimple_expressionAccess().getTermsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getAlternatives_2()); }
	(rule__Simple_expression__Alternatives_2)*
	{ after(grammarAccess.getSimple_expressionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Simple_expression__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group_2_0__0__Impl
	rule__Simple_expression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getAlternatives_2_0_0()); }
	(rule__Simple_expression__Alternatives_2_0_0)
	{ after(grammarAccess.getSimple_expressionAccess().getAlternatives_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Simple_expression__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSimple_expressionAccess().getTermsAssignment_2_0_1()); }
	(rule__Simple_expression__TermsAssignment_2_0_1)
	{ after(grammarAccess.getSimple_expressionAccess().getTermsAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorsAssignment_0()); }
	(rule__Term__FactorsAssignment_0)
	{ after(grammarAccess.getTermAccess().getFactorsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getGroup_1()); }
	(rule__Term__Group_1__0)*
	{ after(grammarAccess.getTermAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__0__Impl
	rule__Term__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getAlternatives_1_0()); }
	(rule__Term__Alternatives_1_0)
	{ after(grammarAccess.getTermAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Term__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTermAccess().getFactorsAssignment_1_1()); }
	(rule__Term__FactorsAssignment_1_1)
	{ after(grammarAccess.getTermAccess().getFactorsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_6__0__Impl
	rule__Factor__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_6_0()); }
	'('
	{ after(grammarAccess.getFactorAccess().getLeftParenthesisKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_6__1__Impl
	rule__Factor__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getExpressionAssignment_6_1()); }
	(rule__Factor__ExpressionAssignment_6_1)
	{ after(grammarAccess.getFactorAccess().getExpressionAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightParenthesisKeyword_6_2()); }
	')'
	{ after(grammarAccess.getFactorAccess().getRightParenthesisKeyword_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_7__0__Impl
	rule__Factor__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getNotKeyword_7_0()); }
	'not'
	{ after(grammarAccess.getFactorAccess().getNotKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getNotAssignment_7_1()); }
	(rule__Factor__NotAssignment_7_1)
	{ after(grammarAccess.getFactorAccess().getNotAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_designator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_designator__Group__0__Impl
	rule__Function_designator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_designatorAccess().getNameAssignment_0()); }
	(rule__Function_designator__NameAssignment_0)
	{ after(grammarAccess.getFunction_designatorAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_designator__Group__1__Impl
	rule__Function_designator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_designatorAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getFunction_designatorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_designator__Group__2__Impl
	rule__Function_designator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_designatorAccess().getExpressionsAssignment_2()); }
	(rule__Function_designator__ExpressionsAssignment_2)?
	{ after(grammarAccess.getFunction_designatorAccess().getExpressionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_designator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_designatorAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFunction_designatorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_procedure_declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_procedure_declaration__Group__0__Impl
	rule__Function_procedure_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_procedure_declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_procedure_declarationAccess().getAlternatives_0()); }
	(rule__Function_procedure_declaration__Alternatives_0)
	{ after(grammarAccess.getFunction_procedure_declarationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_procedure_declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_procedure_declaration__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_procedure_declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_procedure_declarationAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getFunction_procedure_declarationAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_heading__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_heading__Group__0__Impl
	rule__Function_heading__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_headingAccess().getFunctionKeyword_0()); }
	'function'
	{ after(grammarAccess.getFunction_headingAccess().getFunctionKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_heading__Group__1__Impl
	rule__Function_heading__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_headingAccess().getNameAssignment_1()); }
	(rule__Function_heading__NameAssignment_1)
	{ after(grammarAccess.getFunction_headingAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_heading__Group__2__Impl
	rule__Function_heading__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_headingAccess().getParametersAssignment_2()); }
	(rule__Function_heading__ParametersAssignment_2)?
	{ after(grammarAccess.getFunction_headingAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_heading__Group__3__Impl
	rule__Function_heading__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_headingAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getFunction_headingAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_heading__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_headingAccess().getReturnTypeAssignment_4()); }
	(rule__Function_heading__ReturnTypeAssignment_4)
	{ after(grammarAccess.getFunction_headingAccess().getReturnTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function_declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__0__Impl
	rule__Function_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getHeadingAssignment_0()); }
	(rule__Function_declaration__HeadingAssignment_0)
	{ after(grammarAccess.getFunction_declarationAccess().getHeadingAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__1__Impl
	rule__Function_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getFunction_declarationAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunction_declarationAccess().getBlockAssignment_2()); }
	(rule__Function_declaration__BlockAssignment_2)
	{ after(grammarAccess.getFunction_declarationAccess().getBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group__0__Impl
	rule__Formal_parameter_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getFormal_parameter_listAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group__1__Impl
	rule__Formal_parameter_list__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_1()); }
	(rule__Formal_parameter_list__ParametersAssignment_1)
	{ after(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group__2__Impl
	rule__Formal_parameter_list__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getGroup_2()); }
	(rule__Formal_parameter_list__Group_2__0)*
	{ after(grammarAccess.getFormal_parameter_listAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getFormal_parameter_listAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Formal_parameter_list__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group_2__0__Impl
	rule__Formal_parameter_list__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getSemicolonKeyword_2_0()); }
	';'
	{ after(grammarAccess.getFormal_parameter_listAccess().getSemicolonKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Formal_parameter_list__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_2_1()); }
	(rule__Formal_parameter_list__ParametersAssignment_2_1)
	{ after(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value_parameter_section__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value_parameter_section__Group__0__Impl
	rule__Value_parameter_section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value_parameter_section__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValue_parameter_sectionAccess().getIdentifiersAssignment_0()); }
	(rule__Value_parameter_section__IdentifiersAssignment_0)
	{ after(grammarAccess.getValue_parameter_sectionAccess().getIdentifiersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value_parameter_section__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value_parameter_section__Group__1__Impl
	rule__Value_parameter_section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value_parameter_section__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValue_parameter_sectionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getValue_parameter_sectionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value_parameter_section__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value_parameter_section__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value_parameter_section__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValue_parameter_sectionAccess().getTypeAssignment_2()); }
	(rule__Value_parameter_section__TypeAssignment_2)
	{ after(grammarAccess.getValue_parameter_sectionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group__0__Impl
	rule__Identifier_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getNamesAssignment_0()); }
	(rule__Identifier_list__NamesAssignment_0)
	{ after(grammarAccess.getIdentifier_listAccess().getNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
	(rule__Identifier_list__Group_1__0)*
	{ after(grammarAccess.getIdentifier_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Identifier_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group_1__0__Impl
	rule__Identifier_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getIdentifier_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Identifier_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIdentifier_listAccess().getNamesAssignment_1_1()); }
	(rule__Identifier_list__NamesAssignment_1_1)
	{ after(grammarAccess.getIdentifier_listAccess().getNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_parameter_section__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_parameter_section__Group__0__Impl
	rule__Variable_parameter_section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_parameter_sectionAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVariable_parameter_sectionAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_parameter_section__Group__1__Impl
	rule__Variable_parameter_section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_parameter_sectionAccess().getIndentifiersAssignment_1()); }
	(rule__Variable_parameter_section__IndentifiersAssignment_1)
	{ after(grammarAccess.getVariable_parameter_sectionAccess().getIndentifiersAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_parameter_section__Group__2__Impl
	rule__Variable_parameter_section__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_parameter_sectionAccess().getColonKeyword_2()); }
	':'
	{ after(grammarAccess.getVariable_parameter_sectionAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_parameter_section__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_parameter_sectionAccess().getTypeAssignment_3()); }
	(rule__Variable_parameter_section__TypeAssignment_3)
	{ after(grammarAccess.getVariable_parameter_sectionAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__0__Impl
	rule__Procedure_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getHeadingAssignment_0()); }
	(rule__Procedure_declaration__HeadingAssignment_0)
	{ after(grammarAccess.getProcedure_declarationAccess().getHeadingAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__1__Impl
	rule__Procedure_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getProcedure_declarationAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_declarationAccess().getBlockAssignment_2()); }
	(rule__Procedure_declaration__BlockAssignment_2)
	{ after(grammarAccess.getProcedure_declarationAccess().getBlockAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure_heading__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_heading__Group__0__Impl
	rule__Procedure_heading__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_heading__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_headingAccess().getProcedureKeyword_0()); }
	'procedure'
	{ after(grammarAccess.getProcedure_headingAccess().getProcedureKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_heading__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_heading__Group__1__Impl
	rule__Procedure_heading__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_heading__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_headingAccess().getNameAssignment_1()); }
	(rule__Procedure_heading__NameAssignment_1)
	{ after(grammarAccess.getProcedure_headingAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_heading__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Procedure_heading__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_heading__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcedure_headingAccess().getParametersAssignment_2()); }
	(rule__Procedure_heading__ParametersAssignment_2)?
	{ after(grammarAccess.getProcedure_headingAccess().getParametersAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Label_declaration__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label_declaration__Group__0__Impl
	rule__Label_declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabel_declarationAccess().getLabelKeyword_0()); }
	'label'
	{ after(grammarAccess.getLabel_declarationAccess().getLabelKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label_declaration__Group__1__Impl
	rule__Label_declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabel_declarationAccess().getLabelsAssignment_1()); }
	(rule__Label_declaration__LabelsAssignment_1)
	{ after(grammarAccess.getLabel_declarationAccess().getLabelsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label_declaration__Group__2__Impl
	rule__Label_declaration__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabel_declarationAccess().getGroup_2()); }
	(rule__Label_declaration__Group_2__0)*
	{ after(grammarAccess.getLabel_declarationAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label_declaration__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabel_declarationAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getLabel_declarationAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Label_declaration__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label_declaration__Group_2__0__Impl
	rule__Label_declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabel_declarationAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getLabel_declarationAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Label_declaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLabel_declarationAccess().getLabelsAssignment_2_1()); }
	(rule__Label_declaration__LabelsAssignment_2_1)
	{ after(grammarAccess.getLabel_declarationAccess().getLabelsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_0__0__Impl
	rule__Constant__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getOpteratorAssignment_0_0()); }
	(rule__Constant__OpteratorAssignment_0_0)?
	{ after(grammarAccess.getConstantAccess().getOpteratorAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstantAccess().getAlternatives_0_1()); }
	(rule__Constant__Alternatives_0_1)
	{ after(grammarAccess.getConstantAccess().getAlternatives_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition_part__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition_part__Group__0__Impl
	rule__Constant_definition_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definition_partAccess().getConstKeyword_0()); }
	'const'
	{ after(grammarAccess.getConstant_definition_partAccess().getConstKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition_part__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
		(rule__Constant_definition_part__Group_1__0)
		{ after(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
		(rule__Constant_definition_part__Group_1__0)*
		{ after(grammarAccess.getConstant_definition_partAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition_part__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition_part__Group_1__0__Impl
	rule__Constant_definition_part__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definition_partAccess().getConstsAssignment_1_0()); }
	(rule__Constant_definition_part__ConstsAssignment_1_0)
	{ after(grammarAccess.getConstant_definition_partAccess().getConstsAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition_part__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getConstant_definition_partAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant_definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition__Group__0__Impl
	rule__Constant_definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definitionAccess().getNameAssignment_0()); }
	(rule__Constant_definition__NameAssignment_0)
	{ after(grammarAccess.getConstant_definitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition__Group__1__Impl
	rule__Constant_definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definitionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getConstant_definitionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constant_definition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstant_definitionAccess().getConstAssignment_2()); }
	(rule__Constant_definition__ConstAssignment_2)
	{ after(grammarAccess.getConstant_definitionAccess().getConstAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition_part__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition_part__Group__0__Impl
	rule__Type_definition_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_definition_partAccess().getTypeKeyword_0()); }
	'type'
	{ after(grammarAccess.getType_definition_partAccess().getTypeKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition_part__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getType_definition_partAccess().getGroup_1()); }
		(rule__Type_definition_part__Group_1__0)
		{ after(grammarAccess.getType_definition_partAccess().getGroup_1()); }
	)
	(
		{ before(grammarAccess.getType_definition_partAccess().getGroup_1()); }
		(rule__Type_definition_part__Group_1__0)*
		{ after(grammarAccess.getType_definition_partAccess().getGroup_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition_part__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition_part__Group_1__0__Impl
	rule__Type_definition_part__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_definition_partAccess().getTypesAssignment_1_0()); }
	(rule__Type_definition_part__TypesAssignment_1_0)
	{ after(grammarAccess.getType_definition_partAccess().getTypesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition_part__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_definition_partAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getType_definition_partAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Type_definition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition__Group__0__Impl
	rule__Type_definition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_definitionAccess().getNameAssignment_0()); }
	(rule__Type_definition__NameAssignment_0)
	{ after(grammarAccess.getType_definitionAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition__Group__1__Impl
	rule__Type_definition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_definitionAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getType_definitionAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Type_definition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getType_definitionAccess().getTypeAssignment_2()); }
	(rule__Type_definition__TypeAssignment_2)
	{ after(grammarAccess.getType_definitionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Record_type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record_type__Group__0__Impl
	rule__Record_type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecord_typeAccess().getRecordKeywordAssignment_0()); }
	(rule__Record_type__RecordKeywordAssignment_0)
	{ after(grammarAccess.getRecord_typeAccess().getRecordKeywordAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record_type__Group__1__Impl
	rule__Record_type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecord_typeAccess().getFieldsAssignment_1()); }
	(rule__Record_type__FieldsAssignment_1)?
	{ after(grammarAccess.getRecord_typeAccess().getFieldsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record_type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecord_typeAccess().getEndKeywordAssignment_2()); }
	(rule__Record_type__EndKeywordAssignment_2)
	{ after(grammarAccess.getRecord_typeAccess().getEndKeywordAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field_list__Group__0__Impl
	rule__Field_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getField_listAccess().getSectionsAssignment_0()); }
	(rule__Field_list__SectionsAssignment_0)
	{ after(grammarAccess.getField_listAccess().getSectionsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getField_listAccess().getGroup_1()); }
	(rule__Field_list__Group_1__0)*
	{ after(grammarAccess.getField_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Field_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field_list__Group_1__0__Impl
	rule__Field_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getField_listAccess().getSemicolonKeyword_1_0()); }
	';'
	{ after(grammarAccess.getField_listAccess().getSemicolonKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Field_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getField_listAccess().getSectionsAssignment_1_1()); }
	(rule__Field_list__SectionsAssignment_1_1)
	{ after(grammarAccess.getField_listAccess().getSectionsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Record_section__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record_section__Group__0__Impl
	rule__Record_section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_section__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecord_sectionAccess().getIdentifiersAssignment_0()); }
	(rule__Record_section__IdentifiersAssignment_0)
	{ after(grammarAccess.getRecord_sectionAccess().getIdentifiersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_section__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record_section__Group__1__Impl
	rule__Record_section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_section__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecord_sectionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getRecord_sectionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_section__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Record_section__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_section__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRecord_sectionAccess().getTypeAssignment_2()); }
	(rule__Record_section__TypeAssignment_2)
	{ after(grammarAccess.getRecord_sectionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group__0__Impl
	rule__Variable_declaration_part__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVariable_declaration_partAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group__1__Impl
	rule__Variable_declaration_part__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getSectionsAssignment_1()); }
	(rule__Variable_declaration_part__SectionsAssignment_1)
	{ after(grammarAccess.getVariable_declaration_partAccess().getSectionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group__2__Impl
	rule__Variable_declaration_part__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getGroup_3()); }
	(rule__Variable_declaration_part__Group_3__0)*
	{ after(grammarAccess.getVariable_declaration_partAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_declaration_part__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group_3__0__Impl
	rule__Variable_declaration_part__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getSectionsAssignment_3_0()); }
	(rule__Variable_declaration_part__SectionsAssignment_3_0)
	{ after(grammarAccess.getVariable_declaration_partAccess().getSectionsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_declaration_part__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_3_1()); }
	';'
	{ after(grammarAccess.getVariable_declaration_partAccess().getSemicolonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_section__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_section__Group__0__Impl
	rule__Variable_section__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_section__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_sectionAccess().getIdentifiersAssignment_0()); }
	(rule__Variable_section__IdentifiersAssignment_0)
	{ after(grammarAccess.getVariable_sectionAccess().getIdentifiersAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_section__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_section__Group__1__Impl
	rule__Variable_section__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_section__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_sectionAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getVariable_sectionAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_section__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_section__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_section__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_sectionAccess().getTypeAssignment_2()); }
	(rule__Variable_section__TypeAssignment_2)
	{ after(grammarAccess.getVariable_sectionAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_identifier_list__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_identifier_list__Group__0__Impl
	rule__Variable_identifier_list__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_identifier_list__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_identifier_listAccess().getNamesAssignment_0()); }
	(rule__Variable_identifier_list__NamesAssignment_0)
	{ after(grammarAccess.getVariable_identifier_listAccess().getNamesAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_identifier_list__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_identifier_list__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_identifier_list__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_identifier_listAccess().getGroup_1()); }
	(rule__Variable_identifier_list__Group_1__0)*
	{ after(grammarAccess.getVariable_identifier_listAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable_identifier_list__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_identifier_list__Group_1__0__Impl
	rule__Variable_identifier_list__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_identifier_list__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_identifier_listAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getVariable_identifier_listAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_identifier_list__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable_identifier_list__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_identifier_list__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariable_identifier_listAccess().getNamesAssignment_1_1()); }
	(rule__Variable_identifier_list__NamesAssignment_1_1)
	{ after(grammarAccess.getVariable_identifier_listAccess().getNamesAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__While_statement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While_statement__Group__0__Impl
	rule__While_statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhile_statementAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhile_statementAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While_statement__Group__1__Impl
	rule__While_statement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhile_statementAccess().getExpressionAssignment_1()); }
	(rule__While_statement__ExpressionAssignment_1)
	{ after(grammarAccess.getWhile_statementAccess().getExpressionAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While_statement__Group__2__Impl
	rule__While_statement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhile_statementAccess().getDoKeyword_2()); }
	'do'
	{ after(grammarAccess.getWhile_statementAccess().getDoKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__While_statement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhile_statementAccess().getStatementAssignment_3()); }
	(rule__While_statement__StatementAssignment_3)
	{ after(grammarAccess.getWhile_statementAccess().getStatementAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Pascal__ProgramAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPascalAccess().getProgramProgramParserRuleCall_0()); }
		ruleprogram
		{ after(grammarAccess.getPascalAccess().getProgramProgramParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__HeadingAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getHeadingProgram_heading_blockParserRuleCall_0_0()); }
		ruleprogram_heading_block
		{ after(grammarAccess.getProgramAccess().getHeadingProgram_heading_blockParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__BlockAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getBlockBlockParserRuleCall_1_0()); }
		ruleblock
		{ after(grammarAccess.getProgramAccess().getBlockBlockParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program_heading_block__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgram_heading_blockAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProgram_heading_blockAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__LabelAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getLabelLabel_declarationParserRuleCall_0_0()); }
		rulelabel_declaration
		{ after(grammarAccess.getBlockAccess().getLabelLabel_declarationParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getTypeType_definition_partParserRuleCall_1_0()); }
		ruletype_definition_part
		{ after(grammarAccess.getBlockAccess().getTypeType_definition_partParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__VariableAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getVariableVariable_declaration_partParserRuleCall_2_0()); }
		rulevariable_declaration_part
		{ after(grammarAccess.getBlockAccess().getVariableVariable_declaration_partParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__ConstantAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getConstantConstant_definition_partParserRuleCall_3_0()); }
		ruleconstant_definition_part
		{ after(grammarAccess.getBlockAccess().getConstantConstant_definition_partParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__AbstractionAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getAbstractionFunction_procedure_declarationParserRuleCall_4_0()); }
		rulefunction_procedure_declaration
		{ after(grammarAccess.getBlockAccess().getAbstractionFunction_procedure_declarationParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlockAccess().getStatementStatement_partParserRuleCall_5_0()); }
		rulestatement_part
		{ after(grammarAccess.getBlockAccess().getStatementStatement_partParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_part__SequenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatement_partAccess().getSequenceStatement_sequenceParserRuleCall_1_0()); }
		rulestatement_sequence
		{ after(grammarAccess.getStatement_partAccess().getSequenceStatement_sequenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__StatementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatement_sequenceAccess().getStatementsStatementParserRuleCall_0_0()); }
		rulestatement
		{ after(grammarAccess.getStatement_sequenceAccess().getStatementsStatementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement_sequence__StatementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatement_sequenceAccess().getStatementsStatementParserRuleCall_1_1_0()); }
		rulestatement
		{ after(grammarAccess.getStatement_sequenceAccess().getStatementsStatementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__LabelAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getLabelLabelParserRuleCall_0_0_0()); }
		rulelabel
		{ after(grammarAccess.getStatementAccess().getLabelLabelParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__SimpleAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getSimpleSimple_statementParserRuleCall_1_0_0()); }
		rulesimple_statement
		{ after(grammarAccess.getStatementAccess().getSimpleSimple_statementParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__StructuredAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getStructuredStructured_statementParserRuleCall_1_1_0()); }
		rulestructured_statement
		{ after(grammarAccess.getStatementAccess().getStructuredStructured_statementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_statement__AssignmentAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_statementParserRuleCall_0_0()); }
		ruleassignment_statement
		{ after(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_statementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_statement__FunctionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_statementAccess().getFunctionFunction_designatorParserRuleCall_1_0()); }
		rulefunction_designator
		{ after(grammarAccess.getSimple_statementAccess().getFunctionFunction_designatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_statement__Function_noargsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_statementAccess().getFunction_noargsIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getSimple_statementAccess().getFunction_noargsIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structured_statement__CompoundAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructured_statementAccess().getCompoundCompound_statementParserRuleCall_0_0()); }
		rulecompound_statement
		{ after(grammarAccess.getStructured_statementAccess().getCompoundCompound_statementParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structured_statement__While_stmtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructured_statementAccess().getWhile_stmtWhile_statementParserRuleCall_1_0()); }
		rulewhile_statement
		{ after(grammarAccess.getStructured_statementAccess().getWhile_stmtWhile_statementParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Compound_statement__SequenceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompound_statementAccess().getSequenceStatement_sequenceParserRuleCall_1_0()); }
		rulestatement_sequence
		{ after(grammarAccess.getCompound_statementAccess().getSequenceStatement_sequenceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_statementAccess().getVariableVariableParserRuleCall_0_0()); }
		rulevariable
		{ after(grammarAccess.getAssignment_statementAccess().getVariableVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment_statement__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignment_statementAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleexpression
		{ after(grammarAccess.getAssignment_statementAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NumberAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getNumberSIGNED_INTEGER_NUMBERTerminalRuleCall_0_0()); }
		RULE_SIGNED_INTEGER_NUMBER
		{ after(grammarAccess.getLabelAccess().getNumberSIGNED_INTEGER_NUMBERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label__NumberAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabelAccess().getNumberINTEGER_NUMBERTerminalRuleCall_1_0()); }
		RULE_INTEGER_NUMBER
		{ after(grammarAccess.getLabelAccess().getNumberINTEGER_NUMBERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__ExpressionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression_listAccess().getExpressionsExpressionParserRuleCall_0_0()); }
		ruleexpression
		{ after(grammarAccess.getExpression_listAccess().getExpressionsExpressionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression_list__ExpressionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpression_listAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
		ruleexpression
		{ after(grammarAccess.getExpression_listAccess().getExpressionsExpressionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ExpressionsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getExpressionsSimple_expressionParserRuleCall_0()); }
		rulesimple_expression
		{ after(grammarAccess.getExpressionAccess().getExpressionsSimple_expressionParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__PrefixOperatorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getPrefixOperatorADDITION_OPTerminalRuleCall_0_0()); }
		RULE_ADDITION_OP
		{ after(grammarAccess.getSimple_expressionAccess().getPrefixOperatorADDITION_OPTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__TermsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getTermsTermParserRuleCall_1_0()); }
		ruleterm
		{ after(grammarAccess.getSimple_expressionAccess().getTermsTermParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__OperatorsAssignment_2_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getOperatorsADDITION_OPTerminalRuleCall_2_0_0_0_0()); }
		RULE_ADDITION_OP
		{ after(grammarAccess.getSimple_expressionAccess().getOperatorsADDITION_OPTerminalRuleCall_2_0_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__OperatorsAssignment_2_0_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getOperatorsOrKeyword_2_0_0_1_0()); }
		(
			{ before(grammarAccess.getSimple_expressionAccess().getOperatorsOrKeyword_2_0_0_1_0()); }
			'or'
			{ after(grammarAccess.getSimple_expressionAccess().getOperatorsOrKeyword_2_0_0_1_0()); }
		)
		{ after(grammarAccess.getSimple_expressionAccess().getOperatorsOrKeyword_2_0_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__TermsAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getTermsTermParserRuleCall_2_0_1_0()); }
		ruleterm
		{ after(grammarAccess.getSimple_expressionAccess().getTermsTermParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_expression__TermsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_expressionAccess().getTermsUnsigned_numberParserRuleCall_2_1_0()); }
		ruleunsigned_number
		{ after(grammarAccess.getSimple_expressionAccess().getTermsUnsigned_numberParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__FactorsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getFactorsFactorParserRuleCall_0_0()); }
		rulefactor
		{ after(grammarAccess.getTermAccess().getFactorsFactorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OperatorsAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getOperatorsMULTIPLICATION_OPTerminalRuleCall_1_0_0_0()); }
		RULE_MULTIPLICATION_OP
		{ after(grammarAccess.getTermAccess().getOperatorsMULTIPLICATION_OPTerminalRuleCall_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OperatorsAssignment_1_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getOperatorsAndKeyword_1_0_1_0()); }
		(
			{ before(grammarAccess.getTermAccess().getOperatorsAndKeyword_1_0_1_0()); }
			'and'
			{ after(grammarAccess.getTermAccess().getOperatorsAndKeyword_1_0_1_0()); }
		)
		{ after(grammarAccess.getTermAccess().getOperatorsAndKeyword_1_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__FactorsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTermAccess().getFactorsFactorParserRuleCall_1_1_0()); }
		rulefactor
		{ after(grammarAccess.getTermAccess().getFactorsFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__VariableAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getVariableVariableParserRuleCall_0_0()); }
		rulevariable
		{ after(grammarAccess.getFactorAccess().getVariableVariableParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__NumberAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getNumberNumberParserRuleCall_1_0()); }
		rulenumber
		{ after(grammarAccess.getFactorAccess().getNumberNumberParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__StringAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getStringSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getFactorAccess().getStringSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__BooleanAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getBooleanTrueKeyword_3_0()); }
		(
			{ before(grammarAccess.getFactorAccess().getBooleanTrueKeyword_3_0()); }
			'true'
			{ after(grammarAccess.getFactorAccess().getBooleanTrueKeyword_3_0()); }
		)
		{ after(grammarAccess.getFactorAccess().getBooleanTrueKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__BooleanAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getBooleanFalseKeyword_4_0()); }
		(
			{ before(grammarAccess.getFactorAccess().getBooleanFalseKeyword_4_0()); }
			'false'
			{ after(grammarAccess.getFactorAccess().getBooleanFalseKeyword_4_0()); }
		)
		{ after(grammarAccess.getFactorAccess().getBooleanFalseKeyword_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__FunctionAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getFunctionFunction_designatorParserRuleCall_5_0()); }
		rulefunction_designator
		{ after(grammarAccess.getFactorAccess().getFunctionFunction_designatorParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__ExpressionAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getExpressionExpressionParserRuleCall_6_1_0()); }
		ruleexpression
		{ after(grammarAccess.getFactorAccess().getExpressionExpressionParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__NotAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getNotFactorParserRuleCall_7_1_0()); }
		rulefactor
		{ after(grammarAccess.getFactorAccess().getNotFactorParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_designatorAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getFunction_designatorAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_designator__ExpressionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_designatorAccess().getExpressionsExpression_listParserRuleCall_2_0()); }
		ruleexpression_list
		{ after(grammarAccess.getFunction_designatorAccess().getExpressionsExpression_listParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_procedure_declaration__ProceduresAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_procedure_declarationAccess().getProceduresFunction_declarationParserRuleCall_0_0_0()); }
		rulefunction_declaration
		{ after(grammarAccess.getFunction_procedure_declarationAccess().getProceduresFunction_declarationParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_procedure_declaration__FunctionsAssignment_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_procedure_declarationAccess().getFunctionsProcedure_declarationParserRuleCall_0_1_0()); }
		ruleprocedure_declaration
		{ after(grammarAccess.getFunction_procedure_declarationAccess().getFunctionsProcedure_declarationParserRuleCall_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_headingAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunction_headingAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_headingAccess().getParametersFormal_parameter_listParserRuleCall_2_0()); }
		ruleformal_parameter_list
		{ after(grammarAccess.getFunction_headingAccess().getParametersFormal_parameter_listParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_heading__ReturnTypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_headingAccess().getReturnTypeIDTerminalRuleCall_4_0()); }
		RULE_ID
		{ after(grammarAccess.getFunction_headingAccess().getReturnTypeIDTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__HeadingAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getHeadingFunction_headingParserRuleCall_0_0()); }
		rulefunction_heading
		{ after(grammarAccess.getFunction_declarationAccess().getHeadingFunction_headingParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function_declaration__BlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunction_declarationAccess().getBlockBlockParserRuleCall_2_0()); }
		ruleblock
		{ after(grammarAccess.getFunction_declarationAccess().getBlockBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__ParametersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_listAccess().getParametersFormal_parameter_sectionParserRuleCall_1_0()); }
		ruleformal_parameter_section
		{ after(grammarAccess.getFormal_parameter_listAccess().getParametersFormal_parameter_sectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_list__ParametersAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_listAccess().getParametersFormal_parameter_sectionParserRuleCall_2_1_0()); }
		ruleformal_parameter_section
		{ after(grammarAccess.getFormal_parameter_listAccess().getParametersFormal_parameter_sectionParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__ValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getValueValue_parameter_sectionParserRuleCall_0_0()); }
		rulevalue_parameter_section
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getValueValue_parameter_sectionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__VariableAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getVariableVariable_parameter_sectionParserRuleCall_1_0()); }
		rulevariable_parameter_section
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getVariableVariable_parameter_sectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__ProcedureAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getProcedureProcedure_headingParserRuleCall_2_0()); }
		ruleprocedure_heading
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getProcedureProcedure_headingParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Formal_parameter_section__FunctionAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFormal_parameter_sectionAccess().getFunctionFunction_headingParserRuleCall_3_0()); }
		rulefunction_heading
		{ after(grammarAccess.getFormal_parameter_sectionAccess().getFunctionFunction_headingParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value_parameter_section__IdentifiersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValue_parameter_sectionAccess().getIdentifiersIdentifier_listParserRuleCall_0_0()); }
		ruleidentifier_list
		{ after(grammarAccess.getValue_parameter_sectionAccess().getIdentifiersIdentifier_listParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value_parameter_section__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValue_parameter_sectionAccess().getTypeParameter_typeParserRuleCall_2_0()); }
		ruleparameter_type
		{ after(grammarAccess.getValue_parameter_sectionAccess().getTypeParameter_typeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__NamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getNamesIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getIdentifier_listAccess().getNamesIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Identifier_list__NamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIdentifier_listAccess().getNamesIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getIdentifier_listAccess().getNamesIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter_type__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameter_typeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getParameter_typeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__IndentifiersAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_parameter_sectionAccess().getIndentifiersIdentifier_listParserRuleCall_1_0()); }
		ruleidentifier_list
		{ after(grammarAccess.getVariable_parameter_sectionAccess().getIndentifiersIdentifier_listParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_parameter_section__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_parameter_sectionAccess().getTypeParameter_typeParserRuleCall_3_0()); }
		ruleparameter_type
		{ after(grammarAccess.getVariable_parameter_sectionAccess().getTypeParameter_typeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__HeadingAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_declarationAccess().getHeadingProcedure_headingParserRuleCall_0_0()); }
		ruleprocedure_heading
		{ after(grammarAccess.getProcedure_declarationAccess().getHeadingProcedure_headingParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_declaration__BlockAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_declarationAccess().getBlockBlockParserRuleCall_2_0()); }
		ruleblock
		{ after(grammarAccess.getProcedure_declarationAccess().getBlockBlockParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_heading__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_headingAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getProcedure_headingAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure_heading__ParametersAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcedure_headingAccess().getParametersFormal_parameter_listParserRuleCall_2_0()); }
		ruleformal_parameter_list
		{ after(grammarAccess.getProcedure_headingAccess().getParametersFormal_parameter_listParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__NumberAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getNumberAny_numberParserRuleCall_0()); }
		ruleany_number
		{ after(grammarAccess.getNumberAccess().getNumberAny_numberParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration__LabelsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabel_declarationAccess().getLabelsLabelParserRuleCall_1_0()); }
		rulelabel
		{ after(grammarAccess.getLabel_declarationAccess().getLabelsLabelParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Label_declaration__LabelsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLabel_declarationAccess().getLabelsLabelParserRuleCall_2_1_0()); }
		rulelabel
		{ after(grammarAccess.getLabel_declarationAccess().getLabelsLabelParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__OpteratorAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getOpteratorADDITION_OPTerminalRuleCall_0_0_0()); }
		RULE_ADDITION_OP
		{ after(grammarAccess.getConstantAccess().getOpteratorADDITION_OPTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_0_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_0_1_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_0_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NumberAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getNumberNumberParserRuleCall_0_1_1_0()); }
		rulenumber
		{ after(grammarAccess.getConstantAccess().getNumberNumberParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__StringAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getStringSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getConstantAccess().getStringSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__BoolLiteralAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getBoolLiteralTrueKeyword_2_0()); }
		(
			{ before(grammarAccess.getConstantAccess().getBoolLiteralTrueKeyword_2_0()); }
			'true'
			{ after(grammarAccess.getConstantAccess().getBoolLiteralTrueKeyword_2_0()); }
		)
		{ after(grammarAccess.getConstantAccess().getBoolLiteralTrueKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__BoolLiteralAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getBoolLiteralFalseKeyword_3_0()); }
		(
			{ before(grammarAccess.getConstantAccess().getBoolLiteralFalseKeyword_3_0()); }
			'false'
			{ after(grammarAccess.getConstantAccess().getBoolLiteralFalseKeyword_3_0()); }
		)
		{ after(grammarAccess.getConstantAccess().getBoolLiteralFalseKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition_part__ConstsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_definition_partAccess().getConstsConstant_definitionParserRuleCall_1_0_0()); }
		ruleconstant_definition
		{ after(grammarAccess.getConstant_definition_partAccess().getConstsConstant_definitionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_definitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getConstant_definitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant_definition__ConstAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstant_definitionAccess().getConstConstantParserRuleCall_2_0()); }
		ruleconstant
		{ after(grammarAccess.getConstant_definitionAccess().getConstConstantParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition_part__TypesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_definition_partAccess().getTypesType_definitionParserRuleCall_1_0_0()); }
		ruletype_definition
		{ after(grammarAccess.getType_definition_partAccess().getTypesType_definitionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_definitionAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getType_definitionAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type_definition__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getType_definitionAccess().getTypeTypeParserRuleCall_2_0()); }
		ruletype
		{ after(grammarAccess.getType_definitionAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__SimpleAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getSimpleSimple_typeParserRuleCall_0_0()); }
		rulesimple_type
		{ after(grammarAccess.getTypeAccess().getSimpleSimple_typeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__StructuredAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getStructuredStructured_typeParserRuleCall_1_0()); }
		rulestructured_type
		{ after(grammarAccess.getTypeAccess().getStructuredStructured_typeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Simple_type__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSimple_typeAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getSimple_typeAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Structured_type__RecordAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStructured_typeAccess().getRecordRecord_typeParserRuleCall_0()); }
		rulerecord_type
		{ after(grammarAccess.getStructured_typeAccess().getRecordRecord_typeParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__RecordKeywordAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecord_typeAccess().getRecordKeywordRecordKeyword_0_0()); }
		(
			{ before(grammarAccess.getRecord_typeAccess().getRecordKeywordRecordKeyword_0_0()); }
			'record'
			{ after(grammarAccess.getRecord_typeAccess().getRecordKeywordRecordKeyword_0_0()); }
		)
		{ after(grammarAccess.getRecord_typeAccess().getRecordKeywordRecordKeyword_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__FieldsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecord_typeAccess().getFieldsField_listParserRuleCall_1_0()); }
		rulefield_list
		{ after(grammarAccess.getRecord_typeAccess().getFieldsField_listParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_type__EndKeywordAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecord_typeAccess().getEndKeywordEndKeyword_2_0()); }
		(
			{ before(grammarAccess.getRecord_typeAccess().getEndKeywordEndKeyword_2_0()); }
			'end'
			{ after(grammarAccess.getRecord_typeAccess().getEndKeywordEndKeyword_2_0()); }
		)
		{ after(grammarAccess.getRecord_typeAccess().getEndKeywordEndKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__SectionsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getField_listAccess().getSectionsRecord_sectionParserRuleCall_0_0()); }
		rulerecord_section
		{ after(grammarAccess.getField_listAccess().getSectionsRecord_sectionParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Field_list__SectionsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getField_listAccess().getSectionsRecord_sectionParserRuleCall_1_1_0()); }
		rulerecord_section
		{ after(grammarAccess.getField_listAccess().getSectionsRecord_sectionParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_section__IdentifiersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecord_sectionAccess().getIdentifiersIdentifier_listParserRuleCall_0_0()); }
		ruleidentifier_list
		{ after(grammarAccess.getRecord_sectionAccess().getIdentifiersIdentifier_listParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Record_section__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRecord_sectionAccess().getTypeTypeParserRuleCall_2_0()); }
		ruletype
		{ after(grammarAccess.getRecord_sectionAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_number__IntegerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSigned_numberAccess().getIntegerSIGNED_INTEGER_NUMBERTerminalRuleCall_0_0()); }
		RULE_SIGNED_INTEGER_NUMBER
		{ after(grammarAccess.getSigned_numberAccess().getIntegerSIGNED_INTEGER_NUMBERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Signed_number__RealAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSigned_numberAccess().getRealSIGNED_REAL_NUMBERTerminalRuleCall_1_0()); }
		RULE_SIGNED_REAL_NUMBER
		{ after(grammarAccess.getSigned_numberAccess().getRealSIGNED_REAL_NUMBERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_number__IntegerAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_numberAccess().getIntegerINTEGER_NUMBERTerminalRuleCall_0_0()); }
		RULE_INTEGER_NUMBER
		{ after(grammarAccess.getUnsigned_numberAccess().getIntegerINTEGER_NUMBERTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Unsigned_number__RealAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUnsigned_numberAccess().getRealREAL_NUMBERTerminalRuleCall_1_0()); }
		RULE_REAL_NUMBER
		{ after(grammarAccess.getUnsigned_numberAccess().getRealREAL_NUMBERTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__SectionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_declaration_partAccess().getSectionsVariable_sectionParserRuleCall_1_0()); }
		rulevariable_section
		{ after(grammarAccess.getVariable_declaration_partAccess().getSectionsVariable_sectionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_declaration_part__SectionsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_declaration_partAccess().getSectionsVariable_sectionParserRuleCall_3_0_0()); }
		rulevariable_section
		{ after(grammarAccess.getVariable_declaration_partAccess().getSectionsVariable_sectionParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_section__IdentifiersAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_sectionAccess().getIdentifiersVariable_identifier_listParserRuleCall_0_0()); }
		rulevariable_identifier_list
		{ after(grammarAccess.getVariable_sectionAccess().getIdentifiersVariable_identifier_listParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_section__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_sectionAccess().getTypeTypeParserRuleCall_2_0()); }
		ruletype
		{ after(grammarAccess.getVariable_sectionAccess().getTypeTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_identifier_list__NamesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_identifier_listAccess().getNamesIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getVariable_identifier_listAccess().getNamesIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable_identifier_list__NamesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariable_identifier_listAccess().getNamesIDTerminalRuleCall_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariable_identifier_listAccess().getNamesIDTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__ExpressionAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhile_statementAccess().getExpressionExpressionParserRuleCall_1_0()); }
		ruleexpression
		{ after(grammarAccess.getWhile_statementAccess().getExpressionExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__While_statement__StatementAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhile_statementAccess().getStatementStatement_sequenceParserRuleCall_3_0()); }
		rulestatement_sequence
		{ after(grammarAccess.getWhile_statementAccess().getStatementStatement_sequenceParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ADDITION_OP : ('+'|'-');

RULE_MULTIPLICATION_OP : ('*'|'/');

fragment RULE_DIGIT_SEQUENCE : RULE_ADDITION_OP? RULE_INTEGER_NUMBER;

RULE_SIGNED_INTEGER_NUMBER : RULE_ADDITION_OP RULE_INTEGER_NUMBER;

RULE_INTEGER_NUMBER : RULE_INT;

RULE_REAL_NUMBER : (RULE_INTEGER_NUMBER '.' RULE_INTEGER_NUMBER? (('E'|'e') RULE_DIGIT_SEQUENCE)?|RULE_INTEGER_NUMBER ('E'|'e') RULE_DIGIT_SEQUENCE);

RULE_SIGNED_REAL_NUMBER : RULE_ADDITION_OP RULE_REAL_NUMBER;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
