/*
 * generated by Xtext 2.15.0
 */
package org.xtext.example.pascal.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.pascal.ide.contentassist.antlr.internal.InternalPascalParser;
import org.xtext.example.pascal.services.PascalGrammarAccess;

public class PascalParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(PascalGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, PascalGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getStatementAccess().getAlternatives_1(), "rule__Statement__Alternatives_1");
			builder.put(grammarAccess.getSimple_statementAccess().getAlternatives(), "rule__Simple_statement__Alternatives");
			builder.put(grammarAccess.getStructured_statementAccess().getAlternatives(), "rule__Structured_statement__Alternatives");
			builder.put(grammarAccess.getLabelAccess().getAlternatives(), "rule__Label__Alternatives");
			builder.put(grammarAccess.getVar_Access().getAlternatives(), "rule__Var___Alternatives");
			builder.put(grammarAccess.getExpressionAccess().getAlternatives_1_0(), "rule__Expression__Alternatives_1_0");
			builder.put(grammarAccess.getSimple_expressionAccess().getAlternatives_2(), "rule__Simple_expression__Alternatives_2");
			builder.put(grammarAccess.getSimple_expressionAccess().getAlternatives_2_0_0(), "rule__Simple_expression__Alternatives_2_0_0");
			builder.put(grammarAccess.getTermAccess().getAlternatives_1_0(), "rule__Term__Alternatives_1_0");
			builder.put(grammarAccess.getFactorAccess().getAlternatives(), "rule__Factor__Alternatives");
			builder.put(grammarAccess.getFunction_procedure_declarationAccess().getAlternatives_0(), "rule__Function_procedure_declaration__Alternatives_0");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getAlternatives(), "rule__Formal_parameter_section__Alternatives");
			builder.put(grammarAccess.getAny_numberAccess().getAlternatives(), "rule__Any_number__Alternatives");
			builder.put(grammarAccess.getConstantAccess().getAlternatives(), "rule__Constant__Alternatives");
			builder.put(grammarAccess.getConstantAccess().getAlternatives_0_1(), "rule__Constant__Alternatives_0_1");
			builder.put(grammarAccess.getTypeAccess().getAlternatives(), "rule__Type__Alternatives");
			builder.put(grammarAccess.getSimple_typeAccess().getAlternatives(), "rule__Simple_type__Alternatives");
			builder.put(grammarAccess.getSubrange_typeAccess().getAlternatives(), "rule__Subrange_type__Alternatives");
			builder.put(grammarAccess.getField_listAccess().getAlternatives_0(), "rule__Field_list__Alternatives_0");
			builder.put(grammarAccess.getSigned_numberAccess().getAlternatives(), "rule__Signed_number__Alternatives");
			builder.put(grammarAccess.getUnsigned_numberAccess().getAlternatives(), "rule__Unsigned_number__Alternatives");
			builder.put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
			builder.put(grammarAccess.getProgram_heading_blockAccess().getGroup(), "rule__Program_heading_block__Group__0");
			builder.put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
			builder.put(grammarAccess.getStatement_partAccess().getGroup(), "rule__Statement_part__Group__0");
			builder.put(grammarAccess.getStatement_sequenceAccess().getGroup(), "rule__Statement_sequence__Group__0");
			builder.put(grammarAccess.getStatement_sequenceAccess().getGroup_1(), "rule__Statement_sequence__Group_1__0");
			builder.put(grammarAccess.getStatementAccess().getGroup(), "rule__Statement__Group__0");
			builder.put(grammarAccess.getStatementAccess().getGroup_0(), "rule__Statement__Group_0__0");
			builder.put(grammarAccess.getCompound_statementAccess().getGroup(), "rule__Compound_statement__Group__0");
			builder.put(grammarAccess.getAssignment_statementAccess().getGroup(), "rule__Assignment_statement__Group__0");
			builder.put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
			builder.put(grammarAccess.getVar_Access().getGroup_0(), "rule__Var___Group_0__0");
			builder.put(grammarAccess.getVar_Access().getGroup_1(), "rule__Var___Group_1__0");
			builder.put(grammarAccess.getVar_Access().getGroup_2(), "rule__Var___Group_2__0");
			builder.put(grammarAccess.getExpression_listAccess().getGroup(), "rule__Expression_list__Group__0");
			builder.put(grammarAccess.getExpression_listAccess().getGroup_1(), "rule__Expression_list__Group_1__0");
			builder.put(grammarAccess.getExpressionAccess().getGroup(), "rule__Expression__Group__0");
			builder.put(grammarAccess.getExpressionAccess().getGroup_1(), "rule__Expression__Group_1__0");
			builder.put(grammarAccess.getSimple_expressionAccess().getGroup(), "rule__Simple_expression__Group__0");
			builder.put(grammarAccess.getSimple_expressionAccess().getGroup_2_0(), "rule__Simple_expression__Group_2_0__0");
			builder.put(grammarAccess.getTermAccess().getGroup(), "rule__Term__Group__0");
			builder.put(grammarAccess.getTermAccess().getGroup_1(), "rule__Term__Group_1__0");
			builder.put(grammarAccess.getFactorAccess().getGroup_8(), "rule__Factor__Group_8__0");
			builder.put(grammarAccess.getFactorAccess().getGroup_9(), "rule__Factor__Group_9__0");
			builder.put(grammarAccess.getFunction_designatorAccess().getGroup(), "rule__Function_designator__Group__0");
			builder.put(grammarAccess.getFunction_procedure_declarationAccess().getGroup(), "rule__Function_procedure_declaration__Group__0");
			builder.put(grammarAccess.getFunction_headingAccess().getGroup(), "rule__Function_heading__Group__0");
			builder.put(grammarAccess.getFunction_declarationAccess().getGroup(), "rule__Function_declaration__Group__0");
			builder.put(grammarAccess.getFormal_parameter_listAccess().getGroup(), "rule__Formal_parameter_list__Group__0");
			builder.put(grammarAccess.getFormal_parameter_listAccess().getGroup_2(), "rule__Formal_parameter_list__Group_2__0");
			builder.put(grammarAccess.getValue_parameter_sectionAccess().getGroup(), "rule__Value_parameter_section__Group__0");
			builder.put(grammarAccess.getIdentifier_listAccess().getGroup(), "rule__Identifier_list__Group__0");
			builder.put(grammarAccess.getIdentifier_listAccess().getGroup_1(), "rule__Identifier_list__Group_1__0");
			builder.put(grammarAccess.getVariable_parameter_sectionAccess().getGroup(), "rule__Variable_parameter_section__Group__0");
			builder.put(grammarAccess.getProcedure_declarationAccess().getGroup(), "rule__Procedure_declaration__Group__0");
			builder.put(grammarAccess.getProcedure_headingAccess().getGroup(), "rule__Procedure_heading__Group__0");
			builder.put(grammarAccess.getSetAccess().getGroup(), "rule__Set__Group__0");
			builder.put(grammarAccess.getLabel_declarationAccess().getGroup(), "rule__Label_declaration__Group__0");
			builder.put(grammarAccess.getLabel_declarationAccess().getGroup_2(), "rule__Label_declaration__Group_2__0");
			builder.put(grammarAccess.getConstantAccess().getGroup_0(), "rule__Constant__Group_0__0");
			builder.put(grammarAccess.getConstant_definition_partAccess().getGroup(), "rule__Constant_definition_part__Group__0");
			builder.put(grammarAccess.getConstant_definition_partAccess().getGroup_1(), "rule__Constant_definition_part__Group_1__0");
			builder.put(grammarAccess.getConstant_definitionAccess().getGroup(), "rule__Constant_definition__Group__0");
			builder.put(grammarAccess.getType_definition_partAccess().getGroup(), "rule__Type_definition_part__Group__0");
			builder.put(grammarAccess.getType_definition_partAccess().getGroup_1(), "rule__Type_definition_part__Group_1__0");
			builder.put(grammarAccess.getType_definitionAccess().getGroup(), "rule__Type_definition__Group__0");
			builder.put(grammarAccess.getSubrange_typeAccess().getGroup_0(), "rule__Subrange_type__Group_0__0");
			builder.put(grammarAccess.getSubrange_typeAccess().getGroup_1(), "rule__Subrange_type__Group_1__0");
			builder.put(grammarAccess.getEnumerated_typeAccess().getGroup(), "rule__Enumerated_type__Group__0");
			builder.put(grammarAccess.getStructured_typeAccess().getGroup(), "rule__Structured_type__Group__0");
			builder.put(grammarAccess.getRecord_typeAccess().getGroup(), "rule__Record_type__Group__0");
			builder.put(grammarAccess.getField_listAccess().getGroup(), "rule__Field_list__Group__0");
			builder.put(grammarAccess.getField_listAccess().getGroup_0_0(), "rule__Field_list__Group_0_0__0");
			builder.put(grammarAccess.getField_listAccess().getGroup_0_0_1(), "rule__Field_list__Group_0_0_1__0");
			builder.put(grammarAccess.getFixed_partAccess().getGroup(), "rule__Fixed_part__Group__0");
			builder.put(grammarAccess.getFixed_partAccess().getGroup_1(), "rule__Fixed_part__Group_1__0");
			builder.put(grammarAccess.getRecord_sectionAccess().getGroup(), "rule__Record_section__Group__0");
			builder.put(grammarAccess.getVariant_partAccess().getGroup(), "rule__Variant_part__Group__0");
			builder.put(grammarAccess.getVariant_partAccess().getGroup_5(), "rule__Variant_part__Group_5__0");
			builder.put(grammarAccess.getTag_fieldAccess().getGroup(), "rule__Tag_field__Group__0");
			builder.put(grammarAccess.getVariantAccess().getGroup(), "rule__Variant__Group__0");
			builder.put(grammarAccess.getCase_label_listAccess().getGroup(), "rule__Case_label_list__Group__0");
			builder.put(grammarAccess.getCase_label_listAccess().getGroup_1(), "rule__Case_label_list__Group_1__0");
			builder.put(grammarAccess.getPointer_typeAccess().getGroup(), "rule__Pointer_type__Group__0");
			builder.put(grammarAccess.getVariable_declaration_partAccess().getGroup(), "rule__Variable_declaration_part__Group__0");
			builder.put(grammarAccess.getVariable_declaration_partAccess().getGroup_3(), "rule__Variable_declaration_part__Group_3__0");
			builder.put(grammarAccess.getVariable_sectionAccess().getGroup(), "rule__Variable_section__Group__0");
			builder.put(grammarAccess.getVariable_identifier_listAccess().getGroup(), "rule__Variable_identifier_list__Group__0");
			builder.put(grammarAccess.getVariable_identifier_listAccess().getGroup_1(), "rule__Variable_identifier_list__Group_1__0");
			builder.put(grammarAccess.getWhile_statementAccess().getGroup(), "rule__While_statement__Group__0");
			builder.put(grammarAccess.getPascalAccess().getProgramAssignment(), "rule__Pascal__ProgramAssignment");
			builder.put(grammarAccess.getProgramAccess().getHeadingAssignment_0(), "rule__Program__HeadingAssignment_0");
			builder.put(grammarAccess.getProgramAccess().getBlockAssignment_1(), "rule__Program__BlockAssignment_1");
			builder.put(grammarAccess.getProgram_heading_blockAccess().getNameAssignment_1(), "rule__Program_heading_block__NameAssignment_1");
			builder.put(grammarAccess.getBlockAccess().getLabelAssignment_0(), "rule__Block__LabelAssignment_0");
			builder.put(grammarAccess.getBlockAccess().getTypeAssignment_1(), "rule__Block__TypeAssignment_1");
			builder.put(grammarAccess.getBlockAccess().getVariableAssignment_2(), "rule__Block__VariableAssignment_2");
			builder.put(grammarAccess.getBlockAccess().getConstantAssignment_3(), "rule__Block__ConstantAssignment_3");
			builder.put(grammarAccess.getBlockAccess().getAbstractionAssignment_4(), "rule__Block__AbstractionAssignment_4");
			builder.put(grammarAccess.getBlockAccess().getStatementAssignment_5(), "rule__Block__StatementAssignment_5");
			builder.put(grammarAccess.getStatement_partAccess().getSequenceAssignment_1(), "rule__Statement_part__SequenceAssignment_1");
			builder.put(grammarAccess.getStatement_sequenceAccess().getStatementsAssignment_0(), "rule__Statement_sequence__StatementsAssignment_0");
			builder.put(grammarAccess.getStatement_sequenceAccess().getStatementsAssignment_1_1(), "rule__Statement_sequence__StatementsAssignment_1_1");
			builder.put(grammarAccess.getStatementAccess().getLabelAssignment_0_0(), "rule__Statement__LabelAssignment_0_0");
			builder.put(grammarAccess.getStatementAccess().getSimpleAssignment_1_0(), "rule__Statement__SimpleAssignment_1_0");
			builder.put(grammarAccess.getStatementAccess().getStructuredAssignment_1_1(), "rule__Statement__StructuredAssignment_1_1");
			builder.put(grammarAccess.getSimple_statementAccess().getAssignmentAssignment_0(), "rule__Simple_statement__AssignmentAssignment_0");
			builder.put(grammarAccess.getSimple_statementAccess().getFunctionAssignment_1(), "rule__Simple_statement__FunctionAssignment_1");
			builder.put(grammarAccess.getSimple_statementAccess().getFunction_noargsAssignment_2(), "rule__Simple_statement__Function_noargsAssignment_2");
			builder.put(grammarAccess.getStructured_statementAccess().getCompoundAssignment_0(), "rule__Structured_statement__CompoundAssignment_0");
			builder.put(grammarAccess.getStructured_statementAccess().getWhile_stmtAssignment_1(), "rule__Structured_statement__While_stmtAssignment_1");
			builder.put(grammarAccess.getCompound_statementAccess().getSequenceAssignment_1(), "rule__Compound_statement__SequenceAssignment_1");
			builder.put(grammarAccess.getAssignment_statementAccess().getVariableAssignment_0(), "rule__Assignment_statement__VariableAssignment_0");
			builder.put(grammarAccess.getAssignment_statementAccess().getExpressionAssignment_2(), "rule__Assignment_statement__ExpressionAssignment_2");
			builder.put(grammarAccess.getLabelAccess().getNumberAssignment_0(), "rule__Label__NumberAssignment_0");
			builder.put(grammarAccess.getLabelAccess().getNumberAssignment_1(), "rule__Label__NumberAssignment_1");
			builder.put(grammarAccess.getVariableAccess().getNameAssignment_0(), "rule__Variable__NameAssignment_0");
			builder.put(grammarAccess.getVariableAccess().getVariableAssignment_1(), "rule__Variable__VariableAssignment_1");
			builder.put(grammarAccess.getVar_Access().getExpressionsAssignment_0_1(), "rule__Var___ExpressionsAssignment_0_1");
			builder.put(grammarAccess.getVar_Access().getArrayAssignment_0_3(), "rule__Var___ArrayAssignment_0_3");
			builder.put(grammarAccess.getVar_Access().getAccessorAssignment_1_0(), "rule__Var___AccessorAssignment_1_0");
			builder.put(grammarAccess.getVar_Access().getNameAssignment_1_1(), "rule__Var___NameAssignment_1_1");
			builder.put(grammarAccess.getVar_Access().getVariableAssignment_1_2(), "rule__Var___VariableAssignment_1_2");
			builder.put(grammarAccess.getVar_Access().getPointerAssignment_2_1(), "rule__Var___PointerAssignment_2_1");
			builder.put(grammarAccess.getExpression_listAccess().getExpressionsAssignment_0(), "rule__Expression_list__ExpressionsAssignment_0");
			builder.put(grammarAccess.getExpression_listAccess().getExpressionsAssignment_1_1(), "rule__Expression_list__ExpressionsAssignment_1_1");
			builder.put(grammarAccess.getExpressionAccess().getExpressionsAssignment_0(), "rule__Expression__ExpressionsAssignment_0");
			builder.put(grammarAccess.getExpressionAccess().getOperatorsAssignment_1_0_0(), "rule__Expression__OperatorsAssignment_1_0_0");
			builder.put(grammarAccess.getExpressionAccess().getOperatorsAssignment_1_0_1(), "rule__Expression__OperatorsAssignment_1_0_1");
			builder.put(grammarAccess.getExpressionAccess().getOperatorsAssignment_1_0_2(), "rule__Expression__OperatorsAssignment_1_0_2");
			builder.put(grammarAccess.getExpressionAccess().getExpressionsAssignment_1_1(), "rule__Expression__ExpressionsAssignment_1_1");
			builder.put(grammarAccess.getSimple_expressionAccess().getPrefixOperatorAssignment_0(), "rule__Simple_expression__PrefixOperatorAssignment_0");
			builder.put(grammarAccess.getSimple_expressionAccess().getTermsAssignment_1(), "rule__Simple_expression__TermsAssignment_1");
			builder.put(grammarAccess.getSimple_expressionAccess().getOperatorsAssignment_2_0_0_0(), "rule__Simple_expression__OperatorsAssignment_2_0_0_0");
			builder.put(grammarAccess.getSimple_expressionAccess().getOperatorsAssignment_2_0_0_1(), "rule__Simple_expression__OperatorsAssignment_2_0_0_1");
			builder.put(grammarAccess.getSimple_expressionAccess().getTermsAssignment_2_0_1(), "rule__Simple_expression__TermsAssignment_2_0_1");
			builder.put(grammarAccess.getSimple_expressionAccess().getTermsAssignment_2_1(), "rule__Simple_expression__TermsAssignment_2_1");
			builder.put(grammarAccess.getTermAccess().getFactorsAssignment_0(), "rule__Term__FactorsAssignment_0");
			builder.put(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_0(), "rule__Term__OperatorsAssignment_1_0_0");
			builder.put(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_1(), "rule__Term__OperatorsAssignment_1_0_1");
			builder.put(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_2(), "rule__Term__OperatorsAssignment_1_0_2");
			builder.put(grammarAccess.getTermAccess().getOperatorsAssignment_1_0_3(), "rule__Term__OperatorsAssignment_1_0_3");
			builder.put(grammarAccess.getTermAccess().getFactorsAssignment_1_1(), "rule__Term__FactorsAssignment_1_1");
			builder.put(grammarAccess.getFactorAccess().getVariableAssignment_0(), "rule__Factor__VariableAssignment_0");
			builder.put(grammarAccess.getFactorAccess().getNumberAssignment_1(), "rule__Factor__NumberAssignment_1");
			builder.put(grammarAccess.getFactorAccess().getStringAssignment_2(), "rule__Factor__StringAssignment_2");
			builder.put(grammarAccess.getFactorAccess().getSetAssignment_3(), "rule__Factor__SetAssignment_3");
			builder.put(grammarAccess.getFactorAccess().getNilAssignment_4(), "rule__Factor__NilAssignment_4");
			builder.put(grammarAccess.getFactorAccess().getBooleanAssignment_5(), "rule__Factor__BooleanAssignment_5");
			builder.put(grammarAccess.getFactorAccess().getBooleanAssignment_6(), "rule__Factor__BooleanAssignment_6");
			builder.put(grammarAccess.getFactorAccess().getFunctionAssignment_7(), "rule__Factor__FunctionAssignment_7");
			builder.put(grammarAccess.getFactorAccess().getExpressionAssignment_8_1(), "rule__Factor__ExpressionAssignment_8_1");
			builder.put(grammarAccess.getFactorAccess().getNotAssignment_9_1(), "rule__Factor__NotAssignment_9_1");
			builder.put(grammarAccess.getFunction_designatorAccess().getNameAssignment_0(), "rule__Function_designator__NameAssignment_0");
			builder.put(grammarAccess.getFunction_designatorAccess().getExpressionsAssignment_2(), "rule__Function_designator__ExpressionsAssignment_2");
			builder.put(grammarAccess.getFunction_procedure_declarationAccess().getProceduresAssignment_0_0(), "rule__Function_procedure_declaration__ProceduresAssignment_0_0");
			builder.put(grammarAccess.getFunction_procedure_declarationAccess().getFunctionsAssignment_0_1(), "rule__Function_procedure_declaration__FunctionsAssignment_0_1");
			builder.put(grammarAccess.getFunction_headingAccess().getNameAssignment_1(), "rule__Function_heading__NameAssignment_1");
			builder.put(grammarAccess.getFunction_headingAccess().getParametersAssignment_2(), "rule__Function_heading__ParametersAssignment_2");
			builder.put(grammarAccess.getFunction_headingAccess().getReturnTypeAssignment_4(), "rule__Function_heading__ReturnTypeAssignment_4");
			builder.put(grammarAccess.getFunction_declarationAccess().getHeadingAssignment_0(), "rule__Function_declaration__HeadingAssignment_0");
			builder.put(grammarAccess.getFunction_declarationAccess().getBlockAssignment_2(), "rule__Function_declaration__BlockAssignment_2");
			builder.put(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_1(), "rule__Formal_parameter_list__ParametersAssignment_1");
			builder.put(grammarAccess.getFormal_parameter_listAccess().getParametersAssignment_2_1(), "rule__Formal_parameter_list__ParametersAssignment_2_1");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getValueAssignment_0(), "rule__Formal_parameter_section__ValueAssignment_0");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getVariableAssignment_1(), "rule__Formal_parameter_section__VariableAssignment_1");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getProcedureAssignment_2(), "rule__Formal_parameter_section__ProcedureAssignment_2");
			builder.put(grammarAccess.getFormal_parameter_sectionAccess().getFunctionAssignment_3(), "rule__Formal_parameter_section__FunctionAssignment_3");
			builder.put(grammarAccess.getValue_parameter_sectionAccess().getIdentifiersAssignment_0(), "rule__Value_parameter_section__IdentifiersAssignment_0");
			builder.put(grammarAccess.getValue_parameter_sectionAccess().getTypeAssignment_2(), "rule__Value_parameter_section__TypeAssignment_2");
			builder.put(grammarAccess.getIdentifier_listAccess().getNamesAssignment_0(), "rule__Identifier_list__NamesAssignment_0");
			builder.put(grammarAccess.getIdentifier_listAccess().getNamesAssignment_1_1(), "rule__Identifier_list__NamesAssignment_1_1");
			builder.put(grammarAccess.getParameter_typeAccess().getNameAssignment(), "rule__Parameter_type__NameAssignment");
			builder.put(grammarAccess.getVariable_parameter_sectionAccess().getIndentifiersAssignment_1(), "rule__Variable_parameter_section__IndentifiersAssignment_1");
			builder.put(grammarAccess.getVariable_parameter_sectionAccess().getTypeAssignment_3(), "rule__Variable_parameter_section__TypeAssignment_3");
			builder.put(grammarAccess.getProcedure_declarationAccess().getHeadingAssignment_0(), "rule__Procedure_declaration__HeadingAssignment_0");
			builder.put(grammarAccess.getProcedure_declarationAccess().getBlockAssignment_2(), "rule__Procedure_declaration__BlockAssignment_2");
			builder.put(grammarAccess.getProcedure_headingAccess().getNameAssignment_1(), "rule__Procedure_heading__NameAssignment_1");
			builder.put(grammarAccess.getProcedure_headingAccess().getParametersAssignment_2(), "rule__Procedure_heading__ParametersAssignment_2");
			builder.put(grammarAccess.getSetAccess().getBracketsAssignment_0(), "rule__Set__BracketsAssignment_0");
			builder.put(grammarAccess.getSetAccess().getExpressionsAssignment_1(), "rule__Set__ExpressionsAssignment_1");
			builder.put(grammarAccess.getSetAccess().getBracketsAssignment_2(), "rule__Set__BracketsAssignment_2");
			builder.put(grammarAccess.getNumberAccess().getNumberAssignment(), "rule__Number__NumberAssignment");
			builder.put(grammarAccess.getLabel_declarationAccess().getLabelsAssignment_1(), "rule__Label_declaration__LabelsAssignment_1");
			builder.put(grammarAccess.getLabel_declarationAccess().getLabelsAssignment_2_1(), "rule__Label_declaration__LabelsAssignment_2_1");
			builder.put(grammarAccess.getConstantAccess().getOpteratorAssignment_0_0(), "rule__Constant__OpteratorAssignment_0_0");
			builder.put(grammarAccess.getConstantAccess().getNameAssignment_0_1_0(), "rule__Constant__NameAssignment_0_1_0");
			builder.put(grammarAccess.getConstantAccess().getNumberAssignment_0_1_1(), "rule__Constant__NumberAssignment_0_1_1");
			builder.put(grammarAccess.getConstantAccess().getStringAssignment_1(), "rule__Constant__StringAssignment_1");
			builder.put(grammarAccess.getConstantAccess().getBoolLiteralAssignment_2(), "rule__Constant__BoolLiteralAssignment_2");
			builder.put(grammarAccess.getConstantAccess().getBoolLiteralAssignment_3(), "rule__Constant__BoolLiteralAssignment_3");
			builder.put(grammarAccess.getConstant_definition_partAccess().getConstsAssignment_1_0(), "rule__Constant_definition_part__ConstsAssignment_1_0");
			builder.put(grammarAccess.getConstant_definitionAccess().getNameAssignment_0(), "rule__Constant_definition__NameAssignment_0");
			builder.put(grammarAccess.getConstant_definitionAccess().getConstAssignment_2(), "rule__Constant_definition__ConstAssignment_2");
			builder.put(grammarAccess.getType_definition_partAccess().getTypesAssignment_1_0(), "rule__Type_definition_part__TypesAssignment_1_0");
			builder.put(grammarAccess.getType_definitionAccess().getNameAssignment_0(), "rule__Type_definition__NameAssignment_0");
			builder.put(grammarAccess.getType_definitionAccess().getTypeAssignment_2(), "rule__Type_definition__TypeAssignment_2");
			builder.put(grammarAccess.getTypeAccess().getSimpleAssignment_0(), "rule__Type__SimpleAssignment_0");
			builder.put(grammarAccess.getTypeAccess().getStructuredAssignment_1(), "rule__Type__StructuredAssignment_1");
			builder.put(grammarAccess.getTypeAccess().getPointerAssignment_2(), "rule__Type__PointerAssignment_2");
			builder.put(grammarAccess.getSimple_typeAccess().getSubrangeAssignment_0(), "rule__Simple_type__SubrangeAssignment_0");
			builder.put(grammarAccess.getSimple_typeAccess().getEnumeratedAssignment_1(), "rule__Simple_type__EnumeratedAssignment_1");
			builder.put(grammarAccess.getSimple_typeAccess().getNameAssignment_2(), "rule__Simple_type__NameAssignment_2");
			builder.put(grammarAccess.getSubrange_typeAccess().getInitialConstAssignment_0_0(), "rule__Subrange_type__InitialConstAssignment_0_0");
			builder.put(grammarAccess.getSubrange_typeAccess().getFinalConstAssignment_0_2(), "rule__Subrange_type__FinalConstAssignment_0_2");
			builder.put(grammarAccess.getSubrange_typeAccess().getSubrangeAssignment_1_0(), "rule__Subrange_type__SubrangeAssignment_1_0");
			builder.put(grammarAccess.getSubrange_typeAccess().getConstAssignment_1_1(), "rule__Subrange_type__ConstAssignment_1_1");
			builder.put(grammarAccess.getEnumerated_typeAccess().getIdentifiersAssignment_1(), "rule__Enumerated_type__IdentifiersAssignment_1");
			builder.put(grammarAccess.getStructured_typeAccess().getPackedAssignment_0(), "rule__Structured_type__PackedAssignment_0");
			builder.put(grammarAccess.getStructured_typeAccess().getTypeAssignment_1(), "rule__Structured_type__TypeAssignment_1");
			builder.put(grammarAccess.getUnpacked_structured_typeAccess().getRecordAssignment(), "rule__Unpacked_structured_type__RecordAssignment");
			builder.put(grammarAccess.getRecord_typeAccess().getRecordKeywordAssignment_0(), "rule__Record_type__RecordKeywordAssignment_0");
			builder.put(grammarAccess.getRecord_typeAccess().getFieldsAssignment_1(), "rule__Record_type__FieldsAssignment_1");
			builder.put(grammarAccess.getRecord_typeAccess().getEndKeywordAssignment_2(), "rule__Record_type__EndKeywordAssignment_2");
			builder.put(grammarAccess.getField_listAccess().getFixedAssignment_0_0_0(), "rule__Field_list__FixedAssignment_0_0_0");
			builder.put(grammarAccess.getField_listAccess().getVariantsAssignment_0_0_1_1(), "rule__Field_list__VariantsAssignment_0_0_1_1");
			builder.put(grammarAccess.getField_listAccess().getVariantsAssignment_0_1(), "rule__Field_list__VariantsAssignment_0_1");
			builder.put(grammarAccess.getFixed_partAccess().getSectionsAssignment_0(), "rule__Fixed_part__SectionsAssignment_0");
			builder.put(grammarAccess.getFixed_partAccess().getSectionsAssignment_1_1(), "rule__Fixed_part__SectionsAssignment_1_1");
			builder.put(grammarAccess.getRecord_sectionAccess().getIdentifiersAssignment_0(), "rule__Record_section__IdentifiersAssignment_0");
			builder.put(grammarAccess.getRecord_sectionAccess().getTypeAssignment_2(), "rule__Record_section__TypeAssignment_2");
			builder.put(grammarAccess.getVariant_partAccess().getTagAssignment_1(), "rule__Variant_part__TagAssignment_1");
			builder.put(grammarAccess.getVariant_partAccess().getNameAssignment_2(), "rule__Variant_part__NameAssignment_2");
			builder.put(grammarAccess.getVariant_partAccess().getVariantsAssignment_4(), "rule__Variant_part__VariantsAssignment_4");
			builder.put(grammarAccess.getVariant_partAccess().getVariantsAssignment_5_1(), "rule__Variant_part__VariantsAssignment_5_1");
			builder.put(grammarAccess.getTag_fieldAccess().getNameAssignment_0(), "rule__Tag_field__NameAssignment_0");
			builder.put(grammarAccess.getVariantAccess().getLabelsAssignment_0(), "rule__Variant__LabelsAssignment_0");
			builder.put(grammarAccess.getVariantAccess().getFieldsAssignment_3(), "rule__Variant__FieldsAssignment_3");
			builder.put(grammarAccess.getCase_label_listAccess().getConstantsAssignment_0(), "rule__Case_label_list__ConstantsAssignment_0");
			builder.put(grammarAccess.getCase_label_listAccess().getConstantsAssignment_1_1(), "rule__Case_label_list__ConstantsAssignment_1_1");
			builder.put(grammarAccess.getPointer_typeAccess().getTypeAssignment_1(), "rule__Pointer_type__TypeAssignment_1");
			builder.put(grammarAccess.getSigned_numberAccess().getIntegerAssignment_0(), "rule__Signed_number__IntegerAssignment_0");
			builder.put(grammarAccess.getSigned_numberAccess().getRealAssignment_1(), "rule__Signed_number__RealAssignment_1");
			builder.put(grammarAccess.getUnsigned_numberAccess().getIntegerAssignment_0(), "rule__Unsigned_number__IntegerAssignment_0");
			builder.put(grammarAccess.getUnsigned_numberAccess().getRealAssignment_1(), "rule__Unsigned_number__RealAssignment_1");
			builder.put(grammarAccess.getVariable_declaration_partAccess().getSectionsAssignment_1(), "rule__Variable_declaration_part__SectionsAssignment_1");
			builder.put(grammarAccess.getVariable_declaration_partAccess().getSectionsAssignment_3_0(), "rule__Variable_declaration_part__SectionsAssignment_3_0");
			builder.put(grammarAccess.getVariable_sectionAccess().getIdentifiersAssignment_0(), "rule__Variable_section__IdentifiersAssignment_0");
			builder.put(grammarAccess.getVariable_sectionAccess().getTypeAssignment_2(), "rule__Variable_section__TypeAssignment_2");
			builder.put(grammarAccess.getVariable_identifier_listAccess().getNamesAssignment_0(), "rule__Variable_identifier_list__NamesAssignment_0");
			builder.put(grammarAccess.getVariable_identifier_listAccess().getNamesAssignment_1_1(), "rule__Variable_identifier_list__NamesAssignment_1_1");
			builder.put(grammarAccess.getWhile_statementAccess().getExpressionAssignment_1(), "rule__While_statement__ExpressionAssignment_1");
			builder.put(grammarAccess.getWhile_statementAccess().getStatementAssignment_3(), "rule__While_statement__StatementAssignment_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private PascalGrammarAccess grammarAccess;

	@Override
	protected InternalPascalParser createParser() {
		InternalPascalParser result = new InternalPascalParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public PascalGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(PascalGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
